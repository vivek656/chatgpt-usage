{
    "openapi": "3.1.0",
    "info": {
        "title": "Street Data API",
        "description": "\n# About the Street Data API\n\nThis is version v2.7.3 of the Street Data API and gives users access to the same extensive and constantly updated property data that powers our award winning Spectre and Street platforms.\n\nOur property data covers all properties in England and Wales with a comprehensive set of property attributes, enabling users to enrich their websites and applications with the best property data available.\n\nHighly available and highly scalable you can build with confidence knowing our API has the capability to support even the most demanding workloads.\n\nOur API has predictable resource-oriented URLs, accepts JSON request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. \n\nOur API adheres to the JSON:API standard, allowing you to utilise a wide array of existing tooling and SDKs. [You can find out more about the JSON:API standard here.](docs/JSONAPI-Standard.md)\n\n## Authentication\n\nThe Street Data API uses api keys for authentication. You can generate an api key from the dashboard in your Street Data account [here](https://data.street.co.uk/dashboard). \n\nAll API requests should include your API key in an x-api-key HTTP header:\n\n```bash\nx-api-key: YOUR_API_KEY_HERE\n```\n\n## Developer Support\n\nWe want to be actively involved in supporting the Street developer community so please feel free to get in touch with us by email at [data@street.co.uk](mailto:data@street.co.uk). \n\nPlease feel free to also send in any feedback or endpoint requests!\n\n## Updates\nGoing forward a brief summary of any updates to the API can be found on the dedicated [updates page](docs/Open-API-Updates.md).\n\n## Rate Limiting\n\nRequests are rate limited per client at a maximum of 600 requests per minute.\n\n## Using pagination\n\nPaginated endpoints take 2 optional query parameter values: `results` and `page`.\n\n| Query Parameter | Description                                                                                                        | Default |\n| :-------------- | :----------------------------------------------------------------------------------------------------------------- | :------ |\n| `results`       | Determines how many results are returned in a single page. The maximum value is 10,000. | `25`    |\n| `page`          | Determines what page number is returned.                                                                           | `1`     |\n\nAll successful responses will include the following pagination fields in the body under the `meta` key:\n\n| Response field | Description                                                         |\n| :------------- | :------------------------------------------------------------------ |\n| `total`        | The total number of results that matched the filtering parameters. |\n| `page`         | The current page.                                                   |\n| `size`         | The number of results in the current page.                         |\n| `pages`        | The total number of pages.                                          |\n\nTo paginate through responses repeat your request and pass the `page` parameter equal to the page you want.\nPassing a `page` value that is greater than the total number of pages (`pages`) will result in no data, but the\npagination fields above will be included in the response.\n\n### Not using pagination\n\nYou can increase the number of results per page by passing a larger value for the `results` field in your request\nand requesting the first page only.\n\nYou can effectively bypass pagination by passing the parameter `results` equal to the number of items you want\nback. The default `page` is always 1.\n\nBear in mind that not using pagination will greatly increase the amount of data that needs to be transferred\nin a single request and can add a significant increase in request times.\n\nThe **maximum number of results that can be returned is 10,000** (whether pagination is\nused or not).\n\n## Sorting\n\nSome endpoints support sorting the results with the query parameter `sort`.\n\nIf an endpoint uses a lat/lon point & radius, the default behaviour is to sort by ascending distance from\npoint where relevant.\n\nFor all other cases the results will be returned in a fixed, but unspecified order.\n\n# Working with the API\n\nWe have endeavoured to ensure the API is as clear and easy to work with as possible and the API specification provides extensive descriptions and supplementary notes for requests and responses, this guide provides additional support with step by step instructions on forming and making requests and interpreting the response data.  \n\n## Making a request\n\nThe API provides a number of https endpoints enabling property data to be returned in multiple ways e.g by street group property id, ordnance survery unique property reference number (UPRN), postcode etc.\n\nEach endpoint follows a consistent JSON:API compliant request format with one or more query parameters required to define the property identifier or area search parameters for the property / properties you want to return.\n\n## Specifying the property data fields you require\n\nAll endpoints require the query parameter **fields[property]** which accepts a pipe (|) separated list of the property attributes you wish to return. This parameter is required and omitting it will result in a 422 Validation Error being returned.\n\nThe values available to be passed in the **fields[property]** parameters are documented in the specification for each endpoint and only the fields included in this parameter will be returned for each property.\n\nThe cost of a request is dependent on the data fields retrieved so you should only request the fields you require to avoid being charged more than necessary, see our [pricing guide](../Pricing.md) for details.\n\n\n## Simple single property request\n\nThis request returns the address, identities, localities and transactions for a single property by UPRN.  \n#### Example curl request\n```bash\ncurl --location --globoff 'https://api.data.street.co.uk/street-data-api/v2/properties/uprns/100050566438?fields[property]=address|identities|localities|transactions'         --header 'Accept: application/vnd.api+json'         --header 'x-api-key: YOUR_API_KEY_HERE'\n```\n#### Response\n```json\n{\n    \"data\": {\n        \"id\": \"eyJ1ZHBybiI6ICIyNzI1MzA3OCJ9\",\n        \"type\": \"property\",\n        \"attributes\": {\n            \"street_group_property_id\": \"eyJ1ZHBybiI6ICIyNzI1MzA3OCJ9\",\n            \"address\": {\n                \"royal_mail_format\": {\n                    \"organisation_name\": null,\n                    \"department_name\": null,\n                    \"building_number\": \"15\",\n                    \"building_name\": null,\n                    \"sub_building_name\": null,\n                    \"dependent_locality\": null,\n                    \"double_dependent_locality\": null,\n                    \"thoroughfare\": \"Low Moor Avenue\",\n                    \"dependent_thoroughfare\": null,\n                    \"post_town\": \"YORK\",\n                    \"postcode\": \"YO10 4NH\"\n                },\n                \"street_group_format\": {\n                    \"address_lines\": \"15 Low Moor Avenue, YORK\",\n                    \"postcode\": \"YO10 4NH\"\n                },\n                \"simplified_format\": {\n                    \"house_number\": \"15\",\n                    \"street\": \"Low Moor Avenue\",\n                    \"locality\": null,\n                    \"town\": \"YORK\",\n                    \"postcode\": \"YO10 4NH\"\n                }\n            },\n            \"localities\": {\n                \"ward\": \"Fulford & Heslington\",\n                \"local_authority\": \"York\",\n                \"county\": \"York\",\n                \"country\": \"England\",\n                \"national_park\": \"(pseudo) England (non-National Park)\",\n                \"police_force\": \"North Yorkshire\"\n            },\n            \"identities\": {\n                \"street_group_property_id\": \"eyJ1ZHBybiI6ICIyNzI1MzA3OCJ9\",\n                \"royal_mail\": {\n                    \"udprn\": \"27253078\",\n                    \"umprn\": null\n                },\n                \"ordnance_survey\": {\n                    \"uprn\": \"100050566438\",\n                    \"parent_uprn\": null,\n                    \"usrn\": \"34200360\",\n                    \"os_topo_toid\": \"osgb1000033594036\",\n                    \"os_address_toid\": \"osgb1000002128329832\",\n                    \"os_roadlink_toid\": \"osgb4000000010904669\"\n                }\n            },\n            \"transactions\": [\n                {\n                    \"transaction_id\": \"{C3C3F9B6-957E-362B-E053-6B04A8C03ACC}\",\n                    \"date\": \"2021-03-11\",\n                    \"price\": 212500,\n                    \"is_new_build\": false,\n                    \"meta\": {\n                        \"data_type\": \"actual\",\n                        \"source\": \"Land Registry\",\n                        \"attribution_string\": null\n                    }\n                },\n                {\n                    \"transaction_id\": \"{369DFB16-7950-3A19-E050-A8C0620518C6}\",\n                    \"date\": \"2016-06-14\",\n                    \"price\": 190000,\n                    \"is_new_build\": false,\n                    \"meta\": {\n                        \"data_type\": \"actual\",\n                        \"source\": \"Land Registry\",\n                        \"attribution_string\": null\n                    }\n                },\n                {\n                    \"transaction_id\": \"{F3F36BDE-223B-43BB-9A1B-8B1CE2E2ABB9}\",\n                    \"date\": \"2011-07-08\",\n                    \"price\": 155000,\n                    \"is_new_build\": false,\n                    \"meta\": {\n                        \"data_type\": \"actual\",\n                        \"source\": \"Land Registry\",\n                        \"attribution_string\": null\n                    }\n                }\n            ]\n        }\n    },\n    \"meta\": {\n        \"request_cost_gbp\": 0.1,\n        \"balance_gbp\": 19969.5\n    }\n}\n```\n\n## Multiple properties by area\nThis request retrieves properties with the following parameters:\n\n- A 100 metre radius of the latitude and longitude 53.481803, -2.235764\n```point=53.481803%2C-2.235764&radius=100```\n- Limit results to 5 properties only \n```results=5```\n- Include the address, identities, localities and plot data for each property \n```fields[property]=address,identities,localities,plot```\n\n```bash\ncurl 'https://api.data.street.co.uk/street-data-api/v2/properties/areas/point-radius?point=53.481803%2C-2.235764&radius=100&results=5&fields[property]=address|identities|localities|plot'         --header 'Accept: application/vnd.api+json'         --header 'x-api-key: YOUR_API_KEY_HERE'\n```\n#### Example response\n```json\n{\n    \"data\": [\n        {\n            \"id\": \"eyJ1ZHBybiI6ICI1NjI0ODAzMiJ9\",\n            \"type\": \"property\",\n            \"attributes\": {\n                \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1NjI0ODAzMiJ9\",\n                \"address\": {\n                    \"royal_mail_format\": {\n                        \"organisation_name\": \"Safety 4 Sisters\",\n                        \"department_name\": null,\n                        \"building_number\": null,\n                        \"building_name\": \"Central Buildings\",\n                        \"sub_building_name\": null,\n                        \"dependent_locality\": null,\n                        \"double_dependent_locality\": null,\n                        \"thoroughfare\": \"Oldham Street\",\n                        \"dependent_thoroughfare\": null,\n                        \"post_town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"street_group_format\": {\n                        \"address_lines\": \"Safety 4 Sisters, Central Buildings Oldham Street, MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"simplified_format\": {\n                        \"house_number\": \"Central Buildings\",\n                        \"street\": \"Oldham Street\",\n                        \"locality\": null,\n                        \"town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    }\n                },\n                \"localities\": {\n                    \"ward\": \"Deansgate\",\n                    \"local_authority\": \"Manchester\",\n                    \"county\": \"Manchester\",\n                    \"country\": \"England\",\n                    \"national_park\": \"(pseudo) England (non-National Park)\",\n                    \"police_force\": \"Greater Manchester\"\n                },\n                \"identities\": {\n                    \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1NjI0ODAzMiJ9\",\n                    \"royal_mail\": {\n                        \"udprn\": \"56248032\",\n                        \"umprn\": null\n                    },\n                    \"ordnance_survey\": null\n                },\n                \"plot\": null,\n                \"distance_from_point\": 22\n            }\n        },\n        {\n            \"id\": \"eyJ1ZHBybiI6ICI1MTYzNzE4NiJ9\",\n            \"type\": \"property\",\n            \"attributes\": {\n                \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1MTYzNzE4NiJ9\",\n                \"address\": {\n                    \"royal_mail_format\": {\n                        \"organisation_name\": \"Beauty Cosmetics (Manchester) Ltd\",\n                        \"department_name\": null,\n                        \"building_number\": null,\n                        \"building_name\": \"4-5 Central Buildings\",\n                        \"sub_building_name\": null,\n                        \"dependent_locality\": null,\n                        \"double_dependent_locality\": null,\n                        \"thoroughfare\": \"Oldham Street\",\n                        \"dependent_thoroughfare\": null,\n                        \"post_town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"street_group_format\": {\n                        \"address_lines\": \"Beauty Cosmetics (Manchester) Ltd, 4-5 Central Buildings Oldham Street, MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"simplified_format\": {\n                        \"house_number\": \"4-5 Central Buildings\",\n                        \"street\": \"Oldham Street\",\n                        \"locality\": null,\n                        \"town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    }\n                },\n                \"localities\": {\n                    \"ward\": \"Deansgate\",\n                    \"local_authority\": \"Manchester\",\n                    \"county\": \"Manchester\",\n                    \"country\": \"England\",\n                    \"national_park\": \"(pseudo) England (non-National Park)\",\n                    \"police_force\": \"Greater Manchester\"\n                },\n                \"identities\": {\n                    \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1MTYzNzE4NiJ9\",\n                    \"royal_mail\": {\n                        \"udprn\": \"51637186\",\n                        \"umprn\": null\n                    },\n                    \"ordnance_survey\": null\n                },\n                \"plot\": null,\n                \"distance_from_point\": 22\n            }\n        },\n        {\n            \"id\": \"eyJ1ZHBybiI6ICI1NDQ2MTIyNCJ9\",\n            \"type\": \"property\",\n            \"attributes\": {\n                \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1NDQ2MTIyNCJ9\",\n                \"address\": {\n                    \"royal_mail_format\": {\n                        \"organisation_name\": \"Trustees For Methodist Church Purposes\",\n                        \"department_name\": null,\n                        \"building_number\": null,\n                        \"building_name\": \"Central Buildings\",\n                        \"sub_building_name\": null,\n                        \"dependent_locality\": null,\n                        \"double_dependent_locality\": null,\n                        \"thoroughfare\": \"Oldham Street\",\n                        \"dependent_thoroughfare\": null,\n                        \"post_town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"street_group_format\": {\n                        \"address_lines\": \"Trustees For Methodist Church Purposes, Central Buildings Oldham Street, MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"simplified_format\": {\n                        \"house_number\": \"Central Buildings\",\n                        \"street\": \"Oldham Street\",\n                        \"locality\": null,\n                        \"town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    }\n                },\n                \"localities\": {\n                    \"ward\": \"Deansgate\",\n                    \"local_authority\": \"Manchester\",\n                    \"county\": \"Manchester\",\n                    \"country\": \"England\",\n                    \"national_park\": \"(pseudo) England (non-National Park)\",\n                    \"police_force\": \"Greater Manchester\"\n                },\n                \"identities\": {\n                    \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1NDQ2MTIyNCJ9\",\n                    \"royal_mail\": {\n                        \"udprn\": \"54461224\",\n                        \"umprn\": null\n                    },\n                    \"ordnance_survey\": null\n                },\n                \"plot\": null,\n                \"distance_from_point\": 22\n            }\n        },\n        {\n            \"id\": \"eyJ1ZHBybiI6ICI1NDQ2MTExOSJ9\",\n            \"type\": \"property\",\n            \"attributes\": {\n                \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1NDQ2MTExOSJ9\",\n                \"address\": {\n                    \"royal_mail_format\": {\n                        \"organisation_name\": \"Community Pride Initiative\",\n                        \"department_name\": null,\n                        \"building_number\": null,\n                        \"building_name\": \"Central Buildings\",\n                        \"sub_building_name\": null,\n                        \"dependent_locality\": null,\n                        \"double_dependent_locality\": null,\n                        \"thoroughfare\": \"Oldham Street\",\n                        \"dependent_thoroughfare\": null,\n                        \"post_town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"street_group_format\": {\n                        \"address_lines\": \"Community Pride Initiative, Central Buildings Oldham Street, MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"simplified_format\": {\n                        \"house_number\": \"Central Buildings\",\n                        \"street\": \"Oldham Street\",\n                        \"locality\": null,\n                        \"town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    }\n                },\n                \"localities\": {\n                    \"ward\": \"Deansgate\",\n                    \"local_authority\": \"Manchester\",\n                    \"county\": \"Manchester\",\n                    \"country\": \"England\",\n                    \"national_park\": \"(pseudo) England (non-National Park)\",\n                    \"police_force\": \"Greater Manchester\"\n                },\n                \"identities\": {\n                    \"street_group_property_id\": \"eyJ1ZHBybiI6ICI1NDQ2MTExOSJ9\",\n                    \"royal_mail\": {\n                        \"udprn\": \"54461119\",\n                        \"umprn\": null\n                    },\n                    \"ordnance_survey\": null\n                },\n                \"plot\": null,\n                \"distance_from_point\": 22\n            }\n        },\n        {\n            \"id\": \"eyJ1ZHBybiI6ICIxNDMwODAyNCJ9\",\n            \"type\": \"property\",\n            \"attributes\": {\n                \"street_group_property_id\": \"eyJ1ZHBybiI6ICIxNDMwODAyNCJ9\",\n                \"address\": {\n                    \"royal_mail_format\": {\n                        \"organisation_name\": \"M1 Metro Ltd\",\n                        \"department_name\": null,\n                        \"building_number\": null,\n                        \"building_name\": \"14-16\",\n                        \"sub_building_name\": null,\n                        \"dependent_locality\": null,\n                        \"double_dependent_locality\": null,\n                        \"thoroughfare\": \"Oldham Street\",\n                        \"dependent_thoroughfare\": null,\n                        \"post_town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"street_group_format\": {\n                        \"address_lines\": \"M1 Metro Ltd, 14-16 Oldham Street, MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    },\n                    \"simplified_format\": {\n                        \"house_number\": \"14-16\",\n                        \"street\": \"Oldham Street\",\n                        \"locality\": null,\n                        \"town\": \"MANCHESTER\",\n                        \"postcode\": \"M1 1JQ\"\n                    }\n                },\n                \"localities\": {\n                    \"ward\": \"Deansgate\",\n                    \"local_authority\": \"Manchester\",\n                    \"county\": \"Manchester\",\n                    \"country\": \"England\",\n                    \"national_park\": \"(pseudo) England (non-National Park)\",\n                    \"police_force\": \"Greater Manchester\"\n                },\n                \"identities\": {\n                    \"street_group_property_id\": \"eyJ1ZHBybiI6ICIxNDMwODAyNCJ9\",\n                    \"royal_mail\": {\n                        \"udprn\": \"14308024\",\n                        \"umprn\": null\n                    },\n                    \"ordnance_survey\": null\n                },\n                \"plot\": null,\n                \"distance_from_point\": 22\n            }\n        }\n    ],\n    \"meta\": {\n        \"total_results\": 251,\n        \"current_results\": 5,\n        \"current_offset\": 0,\n        \"request_cost_gbp\": 0.5,\n        \"balance_gbp\": 19979.6\n    }\n}\n```\n\n## Filtering\n\nThe areas endpoints support a number of filter parameters to refine the result set to your specific requirements, all filters are passed as query parameters in the format **filter[FILTER_FIELD]=FILTER_VALUE**.\n\nThe same filter parameter can be passed multiple times to filter for multiple values or alternatively the filter value can be passed as a | delimited list of values in a single query parameter.\n\n#### Example filtered request\n\n```bash\ncurl --location --globoff 'https://api.data.street.co.uk/street-data-api/v2/properties/areas/point-radius?point=53.937592%2C-1.073380&radius=500&fields[property]=property_type&results=5&filter[min_price]=200000&filter[max_price]=600000&filter[property_type]=Detached&filter[bedrooms]=3&filter[bedrooms]=4'         --header 'Accept: application/vnd.api+json'         --header 'x-api-key: ygX6Xgo9NwuY2jERNmQJhKTliF480HTJPTgtPCw9KY0'\n```\nThis request applies multiple filters to the returned dataset:\n- Minimum price of £200,000\n- Maximum price of £600,000\n- Detached properties only\n- 3 and 4 bedroom properties only (note this filter is passed multiple times but could also be passed as filter[bedrooms]=3|4 with the same result)\n\n\n## Understanding whether data is actual or predicted\n\nFor some property data fields, actual data is not available nationally for all properties. In these instances, rather than provide no data, we have developed highly accurate machine learning models to predict the most probable value for the property.\n\nThe property fields for which we may provide a predicted value are:\n- Property type\n- Tenure\n- Number of bedrooms\n\nWhilst we have a large degree of confidence in these predicted values we are always clear in the response whether the value returned for a property is actual or predicted by providing a meta json object as part of the data returned for the field.\n\n#### Example response meta object\n```json\n\"meta\": {\n          \"data_type\": \"predicted\",\n          \"source\": \"Street Insights property type machine learning model\",\n          \"attribution_string\": \"Property type predictions provided by Street Insights https://insights.street.co.uk/\"\n        }\n```\n\n# AI Predicted Data\n\nThe Street Data data-set is primarily made up of publicy available data-sets that are cleansed and collated when new data is released. \n\nHowever, many of these data-sets are not complete and therefore only contain a sub-set of UK properties. \n\nMuch of the power of working with the Street Data API comes from the ability to filter by some of these attributes, and therefore rather than simply return null where data is not available, our in-house AI team have trained machine learning models to predict each of these attributes. \n\nOur AI data points fall into one of two categories, partial or full data sets. \n\n\nData Point | Always AI \n---------|----------\nEstimated Value | **Yes**\nEstimated Rental Value | **Yes** \nProperty type | No\nTenure | No\nNumber of bedrooms | No\n\n## Identifying AI Predicted Data\n\nAttributes that are by nature predicted, such as estimated values are not explicitly labelled as predicted in the API response. \n\nWhere data could be either actual or predicted, a meta json object is returned along with the data point along with the model that produced the data point. \n\n#### Example response meta object\n```json\n\"meta\": {\n          \"data_type\": \"predicted\",\n          \"source\": \"Street Insights property type machine learning model\",\n          \"attribution_string\": \"Property type predictions provided by Street Insights https://insights.street.co.uk/\"\n        }\n```\n\n## AI Data consistency over time\n\n<!-- theme: info -->\n\n> #### Please note\n>\n>Predicted data points may change over time and therefore do not rely on the same data being returned when requested at different times.  \n\nWhen actual data becomes available for a previously predicted attribute, we will replace the predicted value for the actual. \n\nFurthermore, our models a continuously re-trained as new data becomes availble on nearby properties, and therefore, predicted value may change as new data becomes available. \n\n# Pricing and billing\n\n### Pricing\n\nData is priced per property, with the price dependent on the fields you require in the response.\n\nThe data fields available for a property are split into 3 tiers, Basic, Core and Premium and our standard pricing is:\n\n- Basic - 2 pence per property\n- Core - 10 pence per property\n- Premium - 50 pence per property\n\n<!-- theme: info -->\n\n> The cost of a request is calculated based on the information we are able to return and the lowest tier for which we are able to provide data for all fields will be charged.\n>\n>This ensures you only pay for data you receive and not for any data fields requested that we are unable to provide. This may occurr in some instances for properties where data for a particular field is unavailable.\n\n<!-- theme: warning -->\n\n>Any request which uses filters for sold subject to contract or last sold dates will be charged per the premium tier regardless of the fields requested in the response.\n\nThe fields available for each tier are:\n\nField Name | Basic | Core | Premium\n---------|----------|---------|--------\naddress | Yes | Yes | Yes\nidentities | Yes | Yes | Yes\nlocalities | Yes | Yes | Yes\nlocation | Yes | Yes | Yes\nconnectivity | No | Yes | Yes\nconstruction_age_band | No | Yes | Yes\ncouncil_tax | No | Yes | Yes\neducation | No | Yes | Yes\nenergy_performance | No | Yes | Yes\nflood_risk | No | Yes | Yes\ninternal_area_square_metres | No | Yes | Yes\nis_bungalow | No | Yes | Yes\nlisted_buildings_on_plot | No | Yes | Yes\nmarket_statistics | No | Yes | Yes\nnearby_completed_transactions | No | Yes | Yes\nnearby_listed_buildings | No | Yes | Yes\nnearby_listings | No | Yes | Yes\nnumber_of_bedrooms | No | Yes | Yes\nplanning_applications | No | Yes | Yes\nnearby_planning_applications | No | Yes | Yes\nplot | No | Yes | Yes\nproperty_type | No | Yes | Yes\ntenure | No | Yes | Yes\ntransactions | No | Yes | Yes\ntransport | No | Yes | Yes\nestimated_values | No | No | Yes\nestimated_rental_value | No | No | Yes\npropensity_to_sell | No | No | Yes\ntitles | No | No | Yes\n\n\n*We are able to offer discounts for higher volume users, please contact us to discuss how we can help.*\n\n<!-- theme: warning -->\n\n> #### Large responses may be costly\n>\n>Our area based endpoints may return a very large number of properties in a single response which may incurr a large cost. \n>\n>To check the cost of a request before receiving the data pass the query parameter dry_run=true and only the metadata will be returned showing the cost of the request but it will not be billed and deducted from your balance.\n\n### Billing\n\nWe operate a pre-payment system and you can top up your account credit in your [account dashboard](data.street.co.uk/dashboard).\n\n<!-- theme: info -->\n\n> #### Introductory credit\n>\n>To help you get started, we provide £50 of introductory credit for all new accounts, this will be credited to your account automatically on registration.\n\nFor every request, along with the response we return a meta object giving the cost of the request and the remaining account balance so you can keep track of your costs and remaining balance.\n\n```json\nmeta\": {\n        \"request_cost_gbp\": 0.1,\n        \"balance_gbp\": 134.2\n    }\n```\n\nOnce your account balance reaches 0 you will receive an error, we do not automatically notify clients of low account balances so we would reccommend you implement a process for ensuring your balance remains sifficient for the request volumes you wish to make.\n\n<!-- theme: info -->\n\n> For high volume users we are able to provide post paid billing, please contact us to discuss our billing options.\n\n### Request deduplication (double charging)\n\nIdentical requests (url + body content) are deduplicated for a period of 5 minutes from the first request to ensure you are not double charged for making the same request multiple times within a short period of time. \n\n\n",
        "contact": {
            "name": "Street Group Data Applications Team",
            "email": "data@street.co.uk"
        },
        "version": "v2.7.3"
    },
    "servers": [
        {
            "url": "/street-data-api/v2"
        },
        {
            "url": "http://api.data.street.co.uk/street-data-api/v2",
            "description": "Production"
        }
    ],
    "paths": {
        "/version": {
            "get": {
                "tags": [
                    "Versioning"
                ],
                "summary": "Get Version",
                "description": "Get the current version of Street Data.\n\nBoth a human-readable message and a semantic version string are returned.",
                "operationId": "get_version_version_get",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Version"
                                },
                                "example": {
                                    "message": "Street Data API v2.7.3",
                                    "sem_ver": "2.7.3"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/street-group-ids/{street_group_property_id}": {
            "get": {
                "tags": [
                    "Property Details"
                ],
                "summary": "Get Property By Street Group Id",
                "description": "Get full details of a property.\n\nA ` `fields[property]` or tier parameter must be passed to specify the property fields in the response.",
                "operationId": "get_property_by_street_group_id_properties_street_group_ids__street_group_property_id__get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "street_group_property_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Street Group Property Id"
                        }
                    },
                    {
                        "name": "fields[property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                            "enum": [
                                "address",
                                "construction_age_band",
                                "council_tax",
                                "education",
                                "energy_performance",
                                "estimated_rental_value",
                                "estimated_values",
                                "flood_risk",
                                "identities",
                                "internal_area_square_metres",
                                "is_bungalow",
                                "latest_transaction_date",
                                "listed_buildings_on_plot",
                                "localities",
                                "location",
                                "number_of_bedrooms",
                                "number_of_bathrooms",
                                "occupancy",
                                "outdoor_space",
                                "plot",
                                "propensity_to_sell_score",
                                "property_listings",
                                "property_type",
                                "street_group_property_id",
                                "tenure",
                                "title_deeds",
                                "transactions",
                                "transport",
                                "restrictive_covenants",
                                "coastal_erosion",
                                "connectivity",
                                "market_statistics",
                                "nearby_completed_transactions",
                                "nearby_listed_buildings",
                                "nearby_listings",
                                "nearby_planning_applications",
                                "planning_applications"
                            ],
                            "title": "Fields[Property]"
                        },
                        "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                        "example": "street_group_property_id|address"
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Tiers"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tier of data to return, can be used instead of fields[property]",
                            "enum": [
                                "basic",
                                "core",
                                "premium"
                            ],
                            "title": "Tier"
                        },
                        "description": "Tier of data to return, can be used instead of fields[property]"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FastAPIErrorAttributes"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/uprns/{uprn}": {
            "get": {
                "tags": [
                    "Property Details"
                ],
                "summary": "Get Property By Uprn",
                "description": "Get full details of a property using Ordnance Survey Unique Property Reference Number (UPRN).\n\n A `fields[property]` or tier parameter must be passed to specify the property fields in the response.",
                "operationId": "get_property_by_uprn_properties_uprns__uprn__get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "uprn",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Uprn"
                        }
                    },
                    {
                        "name": "fields[property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                            "enum": [
                                "address",
                                "construction_age_band",
                                "council_tax",
                                "education",
                                "energy_performance",
                                "estimated_rental_value",
                                "estimated_values",
                                "flood_risk",
                                "identities",
                                "internal_area_square_metres",
                                "is_bungalow",
                                "latest_transaction_date",
                                "listed_buildings_on_plot",
                                "localities",
                                "location",
                                "number_of_bedrooms",
                                "number_of_bathrooms",
                                "occupancy",
                                "outdoor_space",
                                "plot",
                                "propensity_to_sell_score",
                                "property_listings",
                                "property_type",
                                "street_group_property_id",
                                "tenure",
                                "title_deeds",
                                "transactions",
                                "transport",
                                "restrictive_covenants",
                                "coastal_erosion",
                                "connectivity",
                                "market_statistics",
                                "nearby_completed_transactions",
                                "nearby_listed_buildings",
                                "nearby_listings",
                                "nearby_planning_applications",
                                "planning_applications"
                            ],
                            "title": "Fields[Property]"
                        },
                        "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                        "example": "street_group_property_id|address"
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Tiers"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tier of data to return, can be used instead of fields[property]",
                            "enum": [
                                "basic",
                                "core",
                                "premium"
                            ],
                            "title": "Tier"
                        },
                        "description": "Tier of data to return, can be used instead of fields[property]"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FastAPIErrorAttributes"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/udprns/{udprn}": {
            "get": {
                "tags": [
                    "Property Details"
                ],
                "summary": "Get Property By Udprn",
                "description": "Get full details of a property using Royal Mail Unique Delivery Point Reference Number (UDPRN) or Unique Multiple \n(Residence) Point Reference Number (UMPRN).\n\n    A `fields[property]` or tier parameter must be passed to specify the property fields in the response.",
                "operationId": "get_property_by_udprn_properties_udprns__udprn__get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "udprn",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Udprn"
                        }
                    },
                    {
                        "name": "fields[property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                            "enum": [
                                "address",
                                "construction_age_band",
                                "council_tax",
                                "education",
                                "energy_performance",
                                "estimated_rental_value",
                                "estimated_values",
                                "flood_risk",
                                "identities",
                                "internal_area_square_metres",
                                "is_bungalow",
                                "latest_transaction_date",
                                "listed_buildings_on_plot",
                                "localities",
                                "location",
                                "number_of_bedrooms",
                                "number_of_bathrooms",
                                "occupancy",
                                "outdoor_space",
                                "plot",
                                "propensity_to_sell_score",
                                "property_listings",
                                "property_type",
                                "street_group_property_id",
                                "tenure",
                                "title_deeds",
                                "transactions",
                                "transport",
                                "restrictive_covenants",
                                "coastal_erosion",
                                "connectivity",
                                "market_statistics",
                                "nearby_completed_transactions",
                                "nearby_listed_buildings",
                                "nearby_listings",
                                "nearby_planning_applications",
                                "planning_applications"
                            ],
                            "title": "Fields[Property]"
                        },
                        "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                        "example": "street_group_property_id|address"
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Tiers"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tier of data to return, can be used instead of fields[property]",
                            "enum": [
                                "basic",
                                "core",
                                "premium"
                            ],
                            "title": "Tier"
                        },
                        "description": "Tier of data to return, can be used instead of fields[property]"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PropertyDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FastAPIErrorAttributes"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/addresses": {
            "post": {
                "tags": [
                    "Property Details"
                ],
                "summary": "Post Address Match",
                "description": "Get full details of a property using an address string.\n\nThis endpoint is functionally equivalent to `/properties/{street_group_property_id}` except a request body is sent\ncontaining a user address string (see `address` below for more information) and a postcode.\n\nThe corresponding `street_group_property_id` will be looked up (see confidence parameter above) and the property\nfields are returned using the `street_group_property_id`.\n\nA `fields[property]` parameter can be passed to return a subset of the property fields in the response.\n\nThis should be a pipe delimited string of fields to include.",
                "operationId": "post_address_match_properties_addresses_post",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fields[property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "\nPipe delimited string of property attributes to include in the response.\nAt least one of these must be present.\n",
                            "enum": [
                                "address",
                                "construction_age_band",
                                "council_tax",
                                "education",
                                "energy_performance",
                                "estimated_rental_value",
                                "estimated_values",
                                "flood_risk",
                                "identities",
                                "internal_area_square_metres",
                                "is_bungalow",
                                "latest_transaction_date",
                                "listed_buildings_on_plot",
                                "localities",
                                "location",
                                "number_of_bedrooms",
                                "number_of_bathrooms",
                                "occupancy",
                                "outdoor_space",
                                "plot",
                                "propensity_to_sell_score",
                                "property_listings",
                                "property_type",
                                "street_group_property_id",
                                "tenure",
                                "title_deeds",
                                "transactions",
                                "transport",
                                "restrictive_covenants",
                                "coastal_erosion",
                                "connectivity",
                                "market_statistics",
                                "nearby_completed_transactions",
                                "nearby_listed_buildings",
                                "nearby_listings",
                                "nearby_planning_applications",
                                "planning_applications"
                            ],
                            "title": "Fields[Property]"
                        },
                        "description": "\nPipe delimited string of property attributes to include in the response.\nAt least one of these must be present.\n",
                        "example": "street_group_property_id,address"
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Tiers"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tier of data to return, can be used instead of fields[property]",
                            "enum": [
                                "basic",
                                "core",
                                "premium"
                            ],
                            "title": "Tier"
                        },
                        "description": "Tier of data to return, can be used instead of fields[property]"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddressMatchPostRequestWrapper"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressMatch"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FastAPIErrorAttributes"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorAttributes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/areas/point-radius": {
            "get": {
                "tags": [
                    "Property Details"
                ],
                "summary": "Get Properties By Area Point Radius",
                "description": "Get properties within an area using a lat/lon point and radius.\n\nThis is a similar endpoint to `/properties/street-group-ids/{street_group_property_id}`, except it returns multiple properties\nusing an area to search, rather than an individual property.\n\nThe properties returned have a smaller subset of fields to accomodate for the larger response size. The parameters\nnot available in this endpoint are:\n\n- `nearby_listed_buildings`\n- `connectivity`\n- `nearby_listings`\n- `nearby_completed_transactions`\n- `market_statistics`\n- `planning_applications`\n- `nearby_planning_applications`\n\n## Pagination 📑\n\nThis endpoint is paginated, see the [pagination section of the documentation for more information](#section/Pagination).\n\n### Filtering\n\nOther `filter[]` query parameters can be included in any combination to allow for filtering of the result set.\n\n## Multiple query parameters\n\nFilter parameters which accept multiple values can be passed either by passing the query parameter multiple times\nwith different values or as a `|` delimited list within a single query parameter.\n\nFor example to get properties which have an Energy Rating of either `B` or `C`:\n\n- Pass the parameter multiple times:\n\n```\n?energy_efficiency_current_rating=B&energy_efficiency_current_rating=C\n```\n\n- Pass the parameter a single time using `|`:\n\n```\n?energy_efficiency_current_rating=B|C\n```\n\n## Sorting\n\nWhen passing a single point parameter and radius the results will be sorted by properties that are closest to the\npoint first.\n\nYou can use the `sort` query parameter to sort results by certain fields.\n\n#### distance_from_point\n\nWhen passing a single lat/lon point and radius, you can also sort by `distance_from_point`.\n\nIf no sort parameters are passed, the default behaviour is to sort properties by ascending distance from point.\n\n**If other sort parameters are passed, you must explicitly specify `distance_from_point` in the sort\nparameter** as this will be overwritten by the other values if not specified.",
                "operationId": "get_properties_by_area_point_radius_properties_areas_point_radius_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fields[property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nComma delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                            "enum": [
                                "address",
                                "construction_age_band",
                                "council_tax",
                                "distance_from_point",
                                "education",
                                "energy_performance",
                                "estimated_rental_value",
                                "estimated_values",
                                "flood_risk",
                                "identities",
                                "internal_area_square_metres",
                                "is_bungalow",
                                "latest_transaction_date",
                                "listed_buildings_on_plot",
                                "localities",
                                "location",
                                "number_of_bedrooms",
                                "number_of_bathrooms",
                                "occupancy",
                                "outdoor_space",
                                "plot",
                                "propensity_to_sell_score",
                                "property_listings",
                                "property_type",
                                "street_group_property_id",
                                "tenure",
                                "title_deeds",
                                "transactions",
                                "transport",
                                "restrictive_covenants",
                                "coastal_erosion"
                            ],
                            "title": "Fields[Property]"
                        },
                        "description": "\nComma delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                        "example": "street_group_property_id,address"
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Tiers"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tier of data to return, can be used instead of fields[property]",
                            "enum": [
                                "basic",
                                "core",
                                "premium"
                            ],
                            "title": "Tier"
                        },
                        "description": "Tier of data to return, can be used instead of fields[property]"
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nTotal number of properties to return per page in the response.\n\nIf not specified the response will contain a 25 properties in each page.\n\nTo get the next set of results use the page parameter to paginate through the results.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n",
                            "default": 25,
                            "title": "Results"
                        },
                        "description": "\nTotal number of properties to return per page in the response.\n\nIf not specified the response will contain a 25 properties in each page.\n\nTo get the next set of results use the page parameter to paginate through the results.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe page number to get back.\n\nUse this parameter with the `results` parameter to iterate through properties.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "\nThe page number to get back.\n\nUse this parameter with the `results` parameter to iterate through properties.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n"
                    },
                    {
                        "name": "point",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "\nLatitude and longitude of a geographic point. Can be passed multiple times or as a single pipe\ndelimited string of latitude, longitude pairs to define a polygon boundary of points to return\nproperties within.\n\nWhen passing multiple times to define a polygon, the first and last point must be the same to form a\nclosed ring and must be valid per the validity rules for polygons defined here\n<https://postgis.net/workshops/postgis-intro/validity.html>.\n\nNote: Only single ring polygons are supported, no inner rings can be defined.\n\n#### Sorting\n\n⚠️ Important: See the `sorting` header in the endpoint documentation above.\n",
                            "title": "Point"
                        },
                        "description": "\nLatitude and longitude of a geographic point. Can be passed multiple times or as a single pipe\ndelimited string of latitude, longitude pairs to define a polygon boundary of points to return\nproperties within.\n\nWhen passing multiple times to define a polygon, the first and last point must be the same to form a\nclosed ring and must be valid per the validity rules for polygons defined here\n<https://postgis.net/workshops/postgis-intro/validity.html>.\n\nNote: Only single ring polygons are supported, no inner rings can be defined.\n\n#### Sorting\n\n⚠️ Important: See the `sorting` header in the endpoint documentation above.\n",
                        "example": "53.481803,-2.235764"
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "description": "\nStraight line distance in metres from the point location to include properties in the response.\n\nThis parameter is only valid when passed with the parameter `point`.\n\n#### Sorting\n\n⚠️ Important: See the `sorting` header in the endpoint documentation above.\n",
                            "title": "Radius"
                        },
                        "description": "\nStraight line distance in metres from the point location to include properties in the response.\n\nThis parameter is only valid when passed with the parameter `point`.\n\n#### Sorting\n\n⚠️ Important: See the `sorting` header in the endpoint documentation above.\n"
                    },
                    {
                        "name": "filter[min_price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe minimum estimated property value for properties to include in the response.\n",
                            "title": "Filter[Min Price]"
                        },
                        "description": "\nThe minimum estimated property value for properties to include in the response.\n"
                    },
                    {
                        "name": "filter[max_price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe minimum estimated property value for properties to include in the response.\n",
                            "title": "Filter[Max Price]"
                        },
                        "description": "\nThe minimum estimated property value for properties to include in the response.\n"
                    },
                    {
                        "name": "filter[property_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Property Type]"
                        },
                        "description": "\nFilter properties to only include the passed property type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[number_of_bedrooms]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include properties with a given number of bedrooms.\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple number of bedrooms.\n",
                            "title": "Filter[Number Of Bedrooms]"
                        },
                        "description": "\nFilter properties to only include properties with a given number of bedrooms.\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple number of bedrooms.\n"
                    },
                    {
                        "name": "filter[tenure]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TenureValues"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property tenure type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Tenure]"
                        },
                        "description": "\nFilter properties to only include the passed property tenure type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[occupancy]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OccupancyTypes"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property occupancy type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple occupancy types.\n",
                            "title": "Filter[Occupancy]"
                        },
                        "description": "\nFilter properties to only include the passed property occupancy type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple occupancy types.\n"
                    },
                    {
                        "name": "filter[council_tax_band]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CouncilTaxBands"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property council tax band(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple bands.\n",
                            "title": "Filter[Council Tax Band]"
                        },
                        "description": "\nFilter properties to only include the passed property council tax band(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple bands.\n"
                    },
                    {
                        "name": "filter[min_internal_area_square_metres]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a minimum internal area (in square metres).\n",
                            "title": "Filter[Min Internal Area Square Metres]"
                        },
                        "description": "\nFilter properties to only include those that have a minimum internal area (in square metres).\n"
                    },
                    {
                        "name": "filter[max_internal_area_square_metres]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a maximum internal area (in square metres).\n",
                            "title": "Filter[Max Internal Area Square Metres]"
                        },
                        "description": "\nFilter properties to only include those that have a maximum internal area (in square metres).\n"
                    },
                    {
                        "name": "filter[is_bungalow]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that are known to be a bungalow.\n\nBungalow status is not known for all properties so not all properties have a true or false value.\n",
                            "title": "Filter[Is Bungalow]"
                        },
                        "description": "\nFilter properties to only include those that are known to be a bungalow.\n\nBungalow status is not known for all properties so not all properties have a true or false value.\n"
                    },
                    {
                        "name": "filter[min_years_at_property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a minimum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n",
                            "title": "Filter[Min Years At Property]"
                        },
                        "description": "\nFilter properties to only include those that have a minimum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n"
                    },
                    {
                        "name": "filter[max_years_at_property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a maximum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n",
                            "title": "Filter[Max Years At Property]"
                        },
                        "description": "\nFilter properties to only include those that have a maximum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n"
                    },
                    {
                        "name": "filter[energy_efficiency_current_rating]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EnergyEfficiencyRatings"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed known Energy Efficiency Rating(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Energy Efficiency Current Rating]"
                        },
                        "description": "\nFilter properties to only include the passed known Energy Efficiency Rating(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[exclude_known_rented]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nWhen `true` this will filter properties to only include those that are known **not** to be\nrented (social & private).\n\nWhen `false` this will only include properties that are known to be rented.\n",
                            "title": "Filter[Exclude Known Rented]"
                        },
                        "description": "\nWhen `true` this will filter properties to only include those that are known **not** to be\nrented (social & private).\n\nWhen `false` this will only include properties that are known to be rented.\n"
                    },
                    {
                        "name": "filter[include_non_residential]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nWhen `true` this will filter properties to include those that are known to be none residential (i.e both\nresidential & commercial).\n\nWhen `false` this will only include properties that are known to be residential.\n",
                            "default": false,
                            "title": "Filter[Include Non Residential]"
                        },
                        "description": "\nWhen `true` this will filter properties to include those that are known to be none residential (i.e both\nresidential & commercial).\n\nWhen `false` this will only include properties that are known to be residential.\n"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nComma delimited string of transaction attribute names to sort by.\n\nSpecifying a field name will sort ascending, prefix each term with `-` to sort descending.\n\nThis parameter is optional and if omitted the default behaviour is that results will be returned in an\nunspecified, but fixed, order (unless stated otherwise).\n\nSorting will follow the sequence of the values provided to this parameter. The initial value given will\nbe the primary sorting field, followed by the subsequent values in the order they are listed.\n\nSorting by `distance_from_point` is only supported when using a lat/lon & radius - if passed and a\nlat/lon & radius is not used, this value will be ignored.\n",
                            "enum": [
                                "propensity_to_sell_score",
                                "-propensity_to_sell_score",
                                "estimated_value",
                                "-estimated_value",
                                "latest_transaction_date",
                                "-latest_transaction_date",
                                "distance_from_point",
                                "-distance_from_point"
                            ],
                            "title": "Sort"
                        },
                        "description": "\nComma delimited string of transaction attribute names to sort by.\n\nSpecifying a field name will sort ascending, prefix each term with `-` to sort descending.\n\nThis parameter is optional and if omitted the default behaviour is that results will be returned in an\nunspecified, but fixed, order (unless stated otherwise).\n\nSorting will follow the sequence of the values provided to this parameter. The initial value given will\nbe the primary sorting field, followed by the subsequent values in the order they are listed.\n\nSorting by `distance_from_point` is only supported when using a lat/lon & radius - if passed and a\nlat/lon & radius is not used, this value will be ignored.\n"
                    },
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, only metadata will be returned showing the number of results and\n                                            cost but the request will not be charged and no data will be returned.",
                            "title": "Dry Run"
                        },
                        "description": "If true, only metadata will be returned showing the number of results and\n                                            cost but the request will not be charged and no data will be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaPropertyDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FastAPIErrorAttributes"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/areas/polygon": {
            "get": {
                "tags": [
                    "Property Details"
                ],
                "summary": "Get Properties By Polygon",
                "description": "Get properties within an area using a polygon defined by multiple lat/lon points. The polygon must be a closed\nring and must be valid per the validity rules for polygons defined here.\n\nThis is a similar endpoint to `/properties/street-group-ids/{street_group_property_id}`, except it returns multiple properties\nusing an area to search, rather than an individual property.\n\nThe properties returned have a smaller subset of fields to accomodate for the larger response size. The parameters\nnot available in this endpoint are:\n\n- `nearby_listed_buildings`\n- `connectivity`\n- `nearby_listings`\n- `nearby_completed_transactions`\n- `market_statistics`\n- `planning_applications`\n- `nearby_planning_applications`\n\n## Pagination 📑\n\nThis endpoint is paginated, see the [pagination section of the documentation for more information](#section/Pagination).\n\n### Filtering\n\nOther `filter[]` query parameters can be included in any combination to allow for filtering of the result set.\n\n## Multiple query parameters\n\nFilter parameters which accept multiple values can be passed either by passing the query parameter multiple times\nwith different values or as a `|` delimited list within a single query parameter.\n\nFor example to get properties which have an Energy Rating of either `B` or `C`:\n\n- Pass the parameter multiple times:\n\n```\n?energy_efficiency_current_rating=B&energy_efficiency_current_rating=C\n```\n\n- Pass the parameter a single time using `|`:\n\n```\n?energy_efficiency_current_rating=B|C\n```\n\n## Sorting\n\nWhen passing a single point parameter and radius the results will be sorted by properties that are closest to the\npoint first.\n\nYou can use the `sort` query parameter to sort results by certain fields.\n\n#### distance_from_point\n\nWhen passing a single lat/lon point and radius, you can also sort by `distance_from_point`.\n\nIf no sort parameters are passed, the default behaviour is to sort properties by ascending distance from point.\n\n**If other sort parameters are passed, you must explicitly specify `distance_from_point` in the sort\nparameter** as this will be overwritten by the other values if not specified.",
                "operationId": "get_properties_by_polygon_properties_areas_polygon_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fields[property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nComma delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                            "enum": [
                                "address",
                                "construction_age_band",
                                "council_tax",
                                "distance_from_point",
                                "education",
                                "energy_performance",
                                "estimated_rental_value",
                                "estimated_values",
                                "flood_risk",
                                "identities",
                                "internal_area_square_metres",
                                "is_bungalow",
                                "latest_transaction_date",
                                "listed_buildings_on_plot",
                                "localities",
                                "location",
                                "number_of_bedrooms",
                                "number_of_bathrooms",
                                "occupancy",
                                "outdoor_space",
                                "plot",
                                "propensity_to_sell_score",
                                "property_listings",
                                "property_type",
                                "street_group_property_id",
                                "tenure",
                                "title_deeds",
                                "transactions",
                                "transport",
                                "restrictive_covenants",
                                "coastal_erosion"
                            ],
                            "title": "Fields[Property]"
                        },
                        "description": "\nComma delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                        "example": "street_group_property_id,address"
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Tiers"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tier of data to return, can be used instead of fields[property]",
                            "enum": [
                                "basic",
                                "core",
                                "premium"
                            ],
                            "title": "Tier"
                        },
                        "description": "Tier of data to return, can be used instead of fields[property]"
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nTotal number of properties to return per page in the response.\n\nIf not specified the response will contain a 25 properties in each page.\n\nTo get the next set of results use the page parameter to paginate through the results.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n",
                            "default": 25,
                            "title": "Results"
                        },
                        "description": "\nTotal number of properties to return per page in the response.\n\nIf not specified the response will contain a 25 properties in each page.\n\nTo get the next set of results use the page parameter to paginate through the results.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe page number to get back.\n\nUse this parameter with the `results` parameter to iterate through properties.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "\nThe page number to get back.\n\nUse this parameter with the `results` parameter to iterate through properties.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n"
                    },
                    {
                        "name": "point",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "\nLatitude and longitude of a geographic point. Can be passed multiple times or as a single pipe\ndelimited string of latitude, longitude pairs to define a polygon boundary of points to return\nproperties within.\n\nWhen passing multiple times to define a polygon, the first and last point must be the same to form a\nclosed ring and must be valid per the validity rules for polygons defined here\n<https://postgis.net/workshops/postgis-intro/validity.html>.\n\nNote: Only single ring polygons are supported, no inner rings can be defined.\n\n#### Sorting\n\n⚠️ Important: See the `sorting` header in the endpoint documentation above.\n",
                            "title": "Point"
                        },
                        "description": "\nLatitude and longitude of a geographic point. Can be passed multiple times or as a single pipe\ndelimited string of latitude, longitude pairs to define a polygon boundary of points to return\nproperties within.\n\nWhen passing multiple times to define a polygon, the first and last point must be the same to form a\nclosed ring and must be valid per the validity rules for polygons defined here\n<https://postgis.net/workshops/postgis-intro/validity.html>.\n\nNote: Only single ring polygons are supported, no inner rings can be defined.\n\n#### Sorting\n\n⚠️ Important: See the `sorting` header in the endpoint documentation above.\n",
                        "example": "53.481803,-2.235764"
                    },
                    {
                        "name": "filter[min_price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe minimum estimated property value for properties to include in the response.\n",
                            "title": "Filter[Min Price]"
                        },
                        "description": "\nThe minimum estimated property value for properties to include in the response.\n"
                    },
                    {
                        "name": "filter[max_price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe minimum estimated property value for properties to include in the response.\n",
                            "title": "Filter[Max Price]"
                        },
                        "description": "\nThe minimum estimated property value for properties to include in the response.\n"
                    },
                    {
                        "name": "filter[property_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Property Type]"
                        },
                        "description": "\nFilter properties to only include the passed property type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[number_of_bedrooms]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include properties with a given number of bedrooms.\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple number of bedrooms.\n",
                            "title": "Filter[Number Of Bedrooms]"
                        },
                        "description": "\nFilter properties to only include properties with a given number of bedrooms.\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple number of bedrooms.\n"
                    },
                    {
                        "name": "filter[tenure]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TenureValues"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property tenure type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Tenure]"
                        },
                        "description": "\nFilter properties to only include the passed property tenure type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[council_tax_band]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CouncilTaxBands"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property council tax band(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple bands.\n",
                            "title": "Filter[Council Tax Band]"
                        },
                        "description": "\nFilter properties to only include the passed property council tax band(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple bands.\n"
                    },
                    {
                        "name": "filter[min_internal_area_square_metres]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a minimum internal area (in square metres).\n",
                            "title": "Filter[Min Internal Area Square Metres]"
                        },
                        "description": "\nFilter properties to only include those that have a minimum internal area (in square metres).\n"
                    },
                    {
                        "name": "filter[max_internal_area_square_metres]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a maximum internal area (in square metres).\n",
                            "title": "Filter[Max Internal Area Square Metres]"
                        },
                        "description": "\nFilter properties to only include those that have a maximum internal area (in square metres).\n"
                    },
                    {
                        "name": "filter[is_bungalow]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that are known to be a bungalow.\n\nBungalow status is not known for all properties so not all properties have a true or false value.\n",
                            "title": "Filter[Is Bungalow]"
                        },
                        "description": "\nFilter properties to only include those that are known to be a bungalow.\n\nBungalow status is not known for all properties so not all properties have a true or false value.\n"
                    },
                    {
                        "name": "filter[min_years_at_property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a minimum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n",
                            "title": "Filter[Min Years At Property]"
                        },
                        "description": "\nFilter properties to only include those that have a minimum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n"
                    },
                    {
                        "name": "filter[max_years_at_property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a maximum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n",
                            "title": "Filter[Max Years At Property]"
                        },
                        "description": "\nFilter properties to only include those that have a maximum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n"
                    },
                    {
                        "name": "filter[occupancy]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OccupancyTypes"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property occupancy type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple occupancy types.\n",
                            "title": "Filter[Occupancy]"
                        },
                        "description": "\nFilter properties to only include the passed property occupancy type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple occupancy types.\n"
                    },
                    {
                        "name": "filter[energy_efficiency_current_rating]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EnergyEfficiencyRatings"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed known Energy Efficiency Rating(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Energy Efficiency Current Rating]"
                        },
                        "description": "\nFilter properties to only include the passed known Energy Efficiency Rating(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[exclude_known_rented]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nWhen `true` this will filter properties to only include those that are known **not** to be\nrented (social & private).\n\nWhen `false` this will only include properties that are known to be rented.\n",
                            "title": "Filter[Exclude Known Rented]"
                        },
                        "description": "\nWhen `true` this will filter properties to only include those that are known **not** to be\nrented (social & private).\n\nWhen `false` this will only include properties that are known to be rented.\n"
                    },
                    {
                        "name": "filter[include_non_residential]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nWhen `true` this will filter properties to include those that are known to be none residential (i.e both\nresidential & commercial).\n\nWhen `false` this will only include properties that are known to be residential.\n",
                            "default": false,
                            "title": "Filter[Include Non Residential]"
                        },
                        "description": "\nWhen `true` this will filter properties to include those that are known to be none residential (i.e both\nresidential & commercial).\n\nWhen `false` this will only include properties that are known to be residential.\n"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nComma delimited string of transaction attribute names to sort by.\n\nSpecifying a field name will sort ascending, prefix each term with `-` to sort descending.\n\nThis parameter is optional and if omitted the default behaviour is that results will be returned in an\nunspecified, but fixed, order (unless stated otherwise).\n\nSorting will follow the sequence of the values provided to this parameter. The initial value given will\nbe the primary sorting field, followed by the subsequent values in the order they are listed.\n\nSorting by `distance_from_point` is only supported when using a lat/lon & radius - if passed and a\nlat/lon & radius is not used, this value will be ignored.\n",
                            "enum": [
                                "propensity_to_sell_score",
                                "-propensity_to_sell_score",
                                "estimated_value",
                                "-estimated_value",
                                "latest_transaction_date",
                                "-latest_transaction_date",
                                "distance_from_point",
                                "-distance_from_point"
                            ],
                            "title": "Sort"
                        },
                        "description": "\nComma delimited string of transaction attribute names to sort by.\n\nSpecifying a field name will sort ascending, prefix each term with `-` to sort descending.\n\nThis parameter is optional and if omitted the default behaviour is that results will be returned in an\nunspecified, but fixed, order (unless stated otherwise).\n\nSorting will follow the sequence of the values provided to this parameter. The initial value given will\nbe the primary sorting field, followed by the subsequent values in the order they are listed.\n\nSorting by `distance_from_point` is only supported when using a lat/lon & radius - if passed and a\nlat/lon & radius is not used, this value will be ignored.\n"
                    },
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, only metadata will be returned showing the number of results and\n                                            cost but the request will not be charged and no data will be returned.",
                            "title": "Dry Run"
                        },
                        "description": "If true, only metadata will be returned showing the number of results and\n                                            cost but the request will not be charged and no data will be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaPropertyDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FastAPIErrorAttributes"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/properties/areas/postcodes": {
            "get": {
                "tags": [
                    "Property Details"
                ],
                "summary": "Get Properties By Postcode",
                "description": "Get properties within a postcode area.\n\nThis is a similar endpoint to `/properties/street-group-ids/{street_group_property_id}`, except it returns multiple properties\nusing an area to search, rather than an individual property.\n\nThe properties returned have a smaller subset of fields to accommodate for the larger response size. The parameters\nnot available in this endpoint are:\n\n- `nearby_listed_buildings`\n- `connectivity`\n- `nearby_listings`\n- `nearby_completed_transactions`\n- `market_statistics`\n- `planning_applications`\n- `nearby_planning_applications`\n\n## Pagination 📑\n\nThis endpoint is paginated, see the [pagination section of the documentation for more information](#section/Pagination).\n\n### Filtering\n\nOther `filter[]` query parameters can be included in any combination to allow for filtering of the result set.\n\n## Multiple query parameters\n\nFilter parameters which accept multiple values can be passed either by passing the query parameter multiple times\nwith different values or as a `|` delimited list within a single query parameter.\n\nFor example to get properties which have an Energy Rating of either `B` or `C`:\n\n- Pass the parameter multiple times:\n\n```\n?energy_efficiency_current_rating=B&energy_efficiency_current_rating=C\n```\n\n- Pass the parameter a single time using `|`:\n\n```\n?energy_efficiency_current_rating=B|C\n```\n\n## Sorting\n\nWhen passing a single point parameter and radius the results will be sorted by properties that are closest to the\npoint first.\n\nYou can use the `sort` query parameter to sort results by certain fields.\n\n#### distance_from_point\n\nWhen passing a single lat/lon point and radius, you can also sort by `distance_from_point`.\n\nIf no sort parameters are passed, the default behaviour is to sort properties by ascending distance from point.\n\n**If other sort parameters are passed, you must explicitly specify `distance_from_point` in the sort\nparameter** as this will be overwritten by the other values if not specified.",
                "operationId": "get_properties_by_postcode_properties_areas_postcodes_get",
                "security": [
                    {
                        "APIKeyHeader": []
                    }
                ],
                "parameters": [
                    {
                        "name": "fields[property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                            "enum": [
                                "address",
                                "construction_age_band",
                                "council_tax",
                                "distance_from_point",
                                "education",
                                "energy_performance",
                                "estimated_rental_value",
                                "estimated_values",
                                "flood_risk",
                                "identities",
                                "internal_area_square_metres",
                                "is_bungalow",
                                "latest_transaction_date",
                                "listed_buildings_on_plot",
                                "localities",
                                "location",
                                "number_of_bedrooms",
                                "number_of_bathrooms",
                                "occupancy",
                                "outdoor_space",
                                "plot",
                                "propensity_to_sell_score",
                                "property_listings",
                                "property_type",
                                "street_group_property_id",
                                "tenure",
                                "title_deeds",
                                "transactions",
                                "transport",
                                "restrictive_covenants",
                                "coastal_erosion"
                            ],
                            "title": "Fields[Property]"
                        },
                        "description": "\nPipe delimited string of property attributes to include in the response.\n\nAt least one of these must be present.\n",
                        "example": "street_group_property_id,address"
                    },
                    {
                        "name": "tier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/Tiers"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Tier of data to return, can be used instead of fields[property]",
                            "enum": [
                                "basic",
                                "core",
                                "premium"
                            ],
                            "title": "Tier"
                        },
                        "description": "Tier of data to return, can be used instead of fields[property]"
                    },
                    {
                        "name": "results",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "maximum": 10000,
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nTotal number of properties to return per page in the response.\n\nIf not specified the response will contain a 25 properties in each page.\n\nTo get the next set of results use the page parameter to paginate through the results.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n",
                            "default": 25,
                            "title": "Results"
                        },
                        "description": "\nTotal number of properties to return per page in the response.\n\nIf not specified the response will contain a 25 properties in each page.\n\nTo get the next set of results use the page parameter to paginate through the results.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer",
                                    "minimum": 1
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe page number to get back.\n\nUse this parameter with the `results` parameter to iterate through properties.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "\nThe page number to get back.\n\nUse this parameter with the `results` parameter to iterate through properties.\n\nThe maximum number of properties that can be returned is 10,000\n(irrespective to the number of pages).\n"
                    },
                    {
                        "name": "postcode",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^([A-Z]{1,2}\\d[A-Z\\d]??\\d[A-Z]{2}|GIR ?0A{2})$",
                            "description": "\nReturn properties within a UK postcode.\n\nWhen using this parameter, do not include a space in the postcode.\n\nE.g `M1 1JU` becomes `M11JU`.\n",
                            "title": "Postcode"
                        },
                        "description": "\nReturn properties within a UK postcode.\n\nWhen using this parameter, do not include a space in the postcode.\n\nE.g `M1 1JU` becomes `M11JU`.\n",
                        "example": "M11JU"
                    },
                    {
                        "name": "filter[min_price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe minimum estimated property value for properties to include in the response.\n",
                            "title": "Filter[Min Price]"
                        },
                        "description": "\nThe minimum estimated property value for properties to include in the response.\n"
                    },
                    {
                        "name": "filter[max_price]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nThe minimum estimated property value for properties to include in the response.\n",
                            "title": "Filter[Max Price]"
                        },
                        "description": "\nThe minimum estimated property value for properties to include in the response.\n"
                    },
                    {
                        "name": "filter[property_type]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PropertyType"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Property Type]"
                        },
                        "description": "\nFilter properties to only include the passed property type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[number_of_bedrooms]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "type": "integer"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include properties with a given number of bedrooms.\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple number of bedrooms.\n",
                            "title": "Filter[Number Of Bedrooms]"
                        },
                        "description": "\nFilter properties to only include properties with a given number of bedrooms.\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple number of bedrooms.\n"
                    },
                    {
                        "name": "filter[tenure]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TenureValues"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property tenure type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Tenure]"
                        },
                        "description": "\nFilter properties to only include the passed property tenure type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[council_tax_band]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CouncilTaxBands"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property council tax band(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple bands.\n",
                            "title": "Filter[Council Tax Band]"
                        },
                        "description": "\nFilter properties to only include the passed property council tax band(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple bands.\n"
                    },
                    {
                        "name": "filter[min_internal_area_square_metres]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a minimum internal area (in square metres).\n",
                            "title": "Filter[Min Internal Area Square Metres]"
                        },
                        "description": "\nFilter properties to only include those that have a minimum internal area (in square metres).\n"
                    },
                    {
                        "name": "filter[max_internal_area_square_metres]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a maximum internal area (in square metres).\n",
                            "title": "Filter[Max Internal Area Square Metres]"
                        },
                        "description": "\nFilter properties to only include those that have a maximum internal area (in square metres).\n"
                    },
                    {
                        "name": "filter[is_bungalow]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that are known to be a bungalow.\n\nBungalow status is not known for all properties so not all properties have a true or false value.\n",
                            "title": "Filter[Is Bungalow]"
                        },
                        "description": "\nFilter properties to only include those that are known to be a bungalow.\n\nBungalow status is not known for all properties so not all properties have a true or false value.\n"
                    },
                    {
                        "name": "filter[min_years_at_property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a minimum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n",
                            "title": "Filter[Min Years At Property]"
                        },
                        "description": "\nFilter properties to only include those that have a minimum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n"
                    },
                    {
                        "name": "filter[max_years_at_property]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include those that have a maximum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n",
                            "title": "Filter[Max Years At Property]"
                        },
                        "description": "\nFilter properties to only include those that have a maximum number of years since the property was last\nsold.\n\nWhere last sale date is unknown the years at property is calculated from 1st January 1995.\n"
                    },
                    {
                        "name": "filter[occupancy]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OccupancyTypes"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed property occupancy type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple occupancy types.\n",
                            "title": "Filter[Occupancy]"
                        },
                        "description": "\nFilter properties to only include the passed property occupancy type(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple occupancy types.\n"
                    },
                    {
                        "name": "filter[energy_efficiency_current_rating]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EnergyEfficiencyRatings"
                                    }
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nFilter properties to only include the passed known Energy Efficiency Rating(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n",
                            "title": "Filter[Energy Efficiency Current Rating]"
                        },
                        "description": "\nFilter properties to only include the passed known Energy Efficiency Rating(s).\n\nThis parameter can be passed multiple times or a single time as a `|` delimited string to filter against\nmultiple property types.\n"
                    },
                    {
                        "name": "filter[exclude_known_rented]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nWhen `true` this will filter properties to only include those that are known **not** to be\nrented (social & private).\n\nWhen `false` this will only include properties that are known to be rented.\n",
                            "title": "Filter[Exclude Known Rented]"
                        },
                        "description": "\nWhen `true` this will filter properties to only include those that are known **not** to be\nrented (social & private).\n\nWhen `false` this will only include properties that are known to be rented.\n"
                    },
                    {
                        "name": "filter[include_non_residential]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nWhen `true` this will filter properties to include those that are known to be none residential (i.e both\nresidential & commercial).\n\nWhen `false` this will only include properties that are known to be residential.\n",
                            "default": false,
                            "title": "Filter[Include Non Residential]"
                        },
                        "description": "\nWhen `true` this will filter properties to include those that are known to be none residential (i.e both\nresidential & commercial).\n\nWhen `false` this will only include properties that are known to be residential.\n"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "\nComma delmited string of transaction attribute names to sort by.\n\nSpecying a field name will sort ascending, prefix each term with `-` to sort descending.\n\nThis parameter is optional and if omitted the default behaviour is that results will be returned in an\nunspecified, but fixed, order (unless stated otherwise).\n\nSorting will follow the sequence of the values provided to this parameter. The initial value given will\nbe the primary sorting field, followed by the subsequent values in the order they are listed.\n\nSorting by `distance_from_point` is only supported when using a lat/lon & radius - if passed and a\nlat/lon & radius is not used, this value will be ignored.\n",
                            "enum": [
                                "propensity_to_sell_score",
                                "-propensity_to_sell_score",
                                "estimated_value",
                                "-estimated_value",
                                "latest_transaction_date",
                                "-latest_transaction_date",
                                "distance_from_point",
                                "-distance_from_point"
                            ],
                            "title": "Sort"
                        },
                        "description": "\nComma delmited string of transaction attribute names to sort by.\n\nSpecying a field name will sort ascending, prefix each term with `-` to sort descending.\n\nThis parameter is optional and if omitted the default behaviour is that results will be returned in an\nunspecified, but fixed, order (unless stated otherwise).\n\nSorting will follow the sequence of the values provided to this parameter. The initial value given will\nbe the primary sorting field, followed by the subsequent values in the order they are listed.\n\nSorting by `distance_from_point` is only supported when using a lat/lon & radius - if passed and a\nlat/lon & radius is not used, this value will be ignored.\n"
                    },
                    {
                        "name": "dry_run",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, only metadata will be returned showing the number of results and\n                                            cost but the request will not be charged and no data will be returned.",
                            "title": "Dry Run"
                        },
                        "description": "If true, only metadata will be returned showing the number of results and\n                                            cost but the request will not be charged and no data will be returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AreaPropertyDetail"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FastAPIErrorAttributes"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StreetDataErrorAttributes"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddressMatch": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AddressMatchWrapper"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/AddressMatchMeta"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "meta"
                ],
                "title": "AddressMatch"
            },
            "AddressMatchMeta": {
                "properties": {
                    "address_match_confidence": {
                        "type": "number",
                        "maximum": 1.0,
                        "exclusiveMinimum": 0.0,
                        "title": "Address Match Confidence",
                        "description": "\nFloat between 0 and 1 representing the 'confidence' of a matched address.\n\nThe property being returned is a result of the given address-string and postcode.\n\nA value of `0.95` represents a 95% 'confidence'.\n"
                    },
                    "request_cost_gbp": {
                        "type": "number",
                        "title": "Request Cost Gbp",
                        "description": "The cost of the request in GBP."
                    },
                    "balance_gbp": {
                        "type": "number",
                        "title": "Balance Gbp",
                        "description": "The remaining balance in GBP."
                    }
                },
                "type": "object",
                "required": [
                    "address_match_confidence",
                    "request_cost_gbp",
                    "balance_gbp"
                ],
                "title": "AddressMatchMeta"
            },
            "AddressMatchPostRequest": {
                "properties": {
                    "address": {
                        "type": "string",
                        "title": "Address",
                        "description": "\nThe address string excluding the postcode.\n\nThis is looked up against the Royal Mail database for addresses.\n\nAddresses are stored and looked up following the [PAF structure](https://en.wikipedia.org/wiki/Postcode_Address_File):\n\n| Element      | Field name                        | Description    | Max length |\n| :----------- | :-------------------------------- | :------------- | :--------- |\n| Organisation | Organisation Name                 |                | 60         |\n| Organisation | Department Name                   |                | 60         |\n| Premises     | Sub Building Name                 |                | 50         |\n| Premises     | Building Name                     |                | 30         |\n| Premises     | Building Number                   |                | 4          |\n| Thoroughfare | Dependent Thoroughfare Name       |                | 60         |\n| Thoroughfare | Dependent Thoroughfare Descriptor |                | 20         |\n| Thoroughfare | Thoroughfare Name                 | Street         | 60         |\n| Thoroughfare | Thoroughfare Descriptor           |                | 20         |\n| Locality     | Double Dependent Locality         | Small villages | 35         |\n| Locality     | Dependent Locality                |                | 35         |\n| Locality     | Post town                         |                | 30         |\n| Postcode     | Postcode                          |                | 7          |\n| PO Box       | PO Box                            |                | 6          |\n\nFor the most accurate results, ensure your address string follows this order from top to bottom.\n\nField names should be separated with commas. Exclude the postcode from this string - this should be\nprovided separately.\n"
                    },
                    "postcode": {
                        "type": "string",
                        "pattern": "^([A-Z]{1,2}\\d{1,2}\\s?[A-Z\\d]??\\d[A-Z]{2}|GIR ?0A{2})$",
                        "title": "Postcode",
                        "description": "The postcode of the address in UPPERCASE with or without the space."
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "postcode"
                ],
                "title": "AddressMatchPostRequest",
                "example": {
                    "address": "Agent Software Ltd, North Square 11-13 Spear Street, MANCHESTER",
                    "postcode": "M11JU"
                }
            },
            "AddressMatchPostRequestWrapper": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/AddressMatchPostRequest"
                    }
                },
                "type": "object",
                "required": [
                    "data"
                ],
                "title": "AddressMatchPostRequestWrapper"
            },
            "AddressMatchWrapper": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Street Group property ID"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "property"
                        ],
                        "title": "Type",
                        "description": "Type of the entity"
                    },
                    "attributes": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Property"
                            }
                        ],
                        "description": "Attributes related to property."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "attributes"
                ],
                "title": "AddressMatchWrapper"
            },
            "Addresses": {
                "properties": {
                    "royal_mail_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoyalMailFormat"
                            }
                        ],
                        "description": "The address format according to the Royal Mail PAF."
                    },
                    "street_group_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StreetGroupFormat"
                            }
                        ],
                        "description": "The address using Street Group format."
                    },
                    "simplified_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SimplifiedFormat"
                            }
                        ],
                        "description": "A condensed version of the address."
                    },
                    "is_none_residential": {
                        "type": "boolean",
                        "title": "Is None Residential",
                        "description": "Flag indicating if the property is non-residential."
                    }
                },
                "type": "object",
                "required": [
                    "royal_mail_format",
                    "street_group_format",
                    "simplified_format",
                    "is_none_residential"
                ],
                "title": "Addresses"
            },
            "AgentAttributes": {
                "properties": {
                    "id": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id",
                        "description": "The unique identifier of the agent."
                    },
                    "branch_name": {
                        "type": "string",
                        "title": "Branch Name",
                        "description": "The name of the branch associated with the agent."
                    },
                    "company_name": {
                        "type": "string",
                        "title": "Company Name",
                        "description": "The name of the company that the agent belongs to."
                    }
                },
                "type": "object",
                "required": [
                    "branch_name",
                    "company_name"
                ],
                "title": "AgentAttributes"
            },
            "AreaPropertyDetail": {
                "properties": {
                    "data": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/AreaPropertyWrapper"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/DataMeta"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "meta"
                ],
                "title": "AreaPropertyDetail"
            },
            "AreaPropertyWrapper": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Street Group property ID"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "property"
                        ],
                        "title": "Type",
                        "description": "Type of the entity"
                    },
                    "attributes": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MultipleProperty"
                            }
                        ],
                        "description": "Attributes related to multiple properties."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "attributes"
                ],
                "title": "AreaPropertyWrapper"
            },
            "BoolMeta": {
                "properties": {
                    "value": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Value",
                        "description": "The boolean value."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata."
                    }
                },
                "type": "object",
                "title": "BoolMeta"
            },
            "ClosestMotorwayJunction": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the closest motorway junction."
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of the closest motorway junction."
                    },
                    "location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GeoPointLocation"
                            }
                        ],
                        "description": "The geographical location of the motorway junction."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "description",
                    "location"
                ],
                "title": "ClosestMotorwayJunction"
            },
            "CoastalErosion": {
                "properties": {
                    "can_have_erosion_plan": {
                        "type": "boolean",
                        "title": "Can Have Erosion Plan",
                        "description": "\nFlag indicating if the property can have a coastal erosion plan.\n\nIf a property is located in an area where coastal erosion is a risk, this flag will be `true` regardless\nof whether a plan is in place or not. This would include properties on or near a coastline.\n\nIf a property is not located in an area where coastal erosion is a risk, this flag will be `false`. This\nwould include properties located inland.\n"
                    },
                    "plans": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/CoastalErosionPlan"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Plans",
                        "description": "List of coastal erosion plans associated with the property."
                    }
                },
                "type": "object",
                "required": [
                    "can_have_erosion_plan"
                ],
                "title": "CoastalErosion"
            },
            "CoastalErosionEstimatedDistanceLost": {
                "properties": {
                    "short_term": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionEstimatedDistanceLostTerm"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Coastal erosion values for the short term (0-20 years)."
                    },
                    "medium_term": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionEstimatedDistanceLostTerm"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Coastal erosion values for the medium term (20-50 years)."
                    },
                    "long_term": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionEstimatedDistanceLostTerm"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Coastal erosion values for the long term (50-100 years)."
                    }
                },
                "type": "object",
                "title": "CoastalErosionEstimatedDistanceLost"
            },
            "CoastalErosionEstimatedDistanceLostTerm": {
                "properties": {
                    "average_estimated_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Average Estimated Value",
                        "description": "The average estimated amount of coastal erosion in metres."
                    },
                    "estimated_value_upper_bound": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Estimated Value Upper Bound",
                        "description": "The upper bound of average estimated amount of coastal erosion in metres."
                    },
                    "estimated_value_lower_bound": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Estimated Value Lower Bound",
                        "description": "The lower bound of average estimated amount of coastal erosion in metres."
                    },
                    "risk": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionEstimatedDistanceLostTermRisk"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Information about the risk of coastal erosion on the property."
                    }
                },
                "type": "object",
                "required": [
                    "average_estimated_value",
                    "estimated_value_upper_bound",
                    "estimated_value_lower_bound",
                    "risk"
                ],
                "title": "CoastalErosionEstimatedDistanceLostTerm"
            },
            "CoastalErosionEstimatedDistanceLostTermRisk": {
                "properties": {
                    "risk_value": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Risk Value",
                        "description": "\nA measure indicating the level of risk of the property being affected by Coastal Erosion for the given time period.\n\nPositive numbers indicate no risk. The higher the number, the further away in distance the property is from being affected by coastal erosion in the future.\n\nAs the number approaches zero this indicates the property is at risk of being affected.\n\nNegative numbers are always high risk and indicate the property is extremely likely to be affected.\n"
                    },
                    "risk_rating": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "enum": [
                            "no risk",
                            "low risk",
                            "medium risk",
                            "high risk"
                        ],
                        "title": "Risk Rating",
                        "description": "A descrpition of the risk value as a rating."
                    }
                },
                "type": "object",
                "required": [
                    "risk_value",
                    "risk_rating"
                ],
                "title": "CoastalErosionEstimatedDistanceLostTermRisk"
            },
            "CoastalErosionNoActiveIntervention": {
                "properties": {
                    "estimated_distance_lost": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionEstimatedDistanceLost"
                            }
                        ],
                        "description": "Estimated distances lost to coastal erosion without a shore management plan in place. If a shore management plan is in place, this is the estimate values that would occur if it was not."
                    }
                },
                "type": "object",
                "required": [
                    "estimated_distance_lost"
                ],
                "title": "CoastalErosionNoActiveIntervention"
            },
            "CoastalErosionPlan": {
                "properties": {
                    "feature_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Feature Id",
                        "description": "The ID of the coastal feature."
                    },
                    "feature_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Feature Type",
                        "description": "The type of the coastal feature. Floodable/Erodible etc."
                    },
                    "defence_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Defence Type",
                        "description": "The defence type if in-place."
                    },
                    "floodable": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Floodable",
                        "description": "A flag indiciating if the feature is floodable."
                    },
                    "boundary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Boundary",
                        "description": "The geographical boundary of the coastal feature in WKT (LINESTRING)."
                    },
                    "mid_point": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mid Point",
                        "description": "The MidPoint of the geographical boundary in WKT (POINT)."
                    },
                    "distance_from_point": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance From Point",
                        "description": "The closest distance in metres from the property to the coastal feature."
                    },
                    "shore_management_plan": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionShoreManagementPlan"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Coastal erosion estimates where a shore management plan is in place."
                    },
                    "no_active_intervention": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionNoActiveIntervention"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Coastal erosion estimates that would occur if no shore management plan is in place."
                    },
                    "meta": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            }
                        ],
                        "description": "Additional metadata associated with the coastal feature."
                    }
                },
                "type": "object",
                "required": [
                    "feature_id",
                    "feature_type",
                    "defence_type",
                    "floodable",
                    "boundary",
                    "mid_point",
                    "distance_from_point",
                    "meta"
                ],
                "title": "CoastalErosionPlan"
            },
            "CoastalErosionShoreManagementPlan": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the shore management plan."
                    },
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "The ID of the shore management plan."
                    },
                    "estimated_distance_lost": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosionEstimatedDistanceLost"
                            }
                        ],
                        "description": "Estimated distances lost to coastal erosion with a shore management plan."
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id",
                    "estimated_distance_lost"
                ],
                "title": "CoastalErosionShoreManagementPlan"
            },
            "Connectivity": {
                "properties": {
                    "broadband_availability": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PredictedBroadbandSpeeds"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Broadband Availability",
                        "description": "The type and predicted speeds of broadband available to the property."
                    },
                    "mobile_service_coverage": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MobileServiceCoverageItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mobile Service Coverage",
                        "description": "Values for different mobile service coverage."
                    }
                },
                "type": "object",
                "title": "Connectivity"
            },
            "CoordinateType": {
                "type": "string",
                "enum": [
                    "property",
                    "postcode",
                    "polygon"
                ],
                "title": "CoordinateType"
            },
            "CouncilTax": {
                "properties": {
                    "band": {
                        "type": "string",
                        "title": "Band",
                        "description": "The council tax band for the property."
                    },
                    "current_annual_charge": {
                        "type": "number",
                        "title": "Current Annual Charge",
                        "description": "The current annual council tax charge for the property."
                    }
                },
                "type": "object",
                "required": [
                    "band",
                    "current_annual_charge"
                ],
                "title": "CouncilTax"
            },
            "CouncilTaxBands": {
                "type": "string",
                "enum": [
                    "A",
                    "B",
                    "C",
                    "D",
                    "E",
                    "F",
                    "G",
                    "H"
                ],
                "title": "CouncilTaxBands"
            },
            "DataMeta": {
                "properties": {
                    "total": {
                        "type": "integer",
                        "title": "Total",
                        "description": "The total number of hits."
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page",
                        "description": "The current page number."
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size",
                        "description": "The number of items per page."
                    },
                    "pages": {
                        "type": "integer",
                        "title": "Pages",
                        "description": "The total number of pages."
                    },
                    "request_cost_gbp": {
                        "type": "number",
                        "title": "Request Cost Gbp",
                        "description": "The cost of the request in GBP."
                    },
                    "balance_gbp": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Balance Gbp",
                        "description": "The remaining balance in GBP."
                    }
                },
                "type": "object",
                "required": [
                    "total",
                    "page",
                    "size",
                    "pages",
                    "request_cost_gbp",
                    "balance_gbp"
                ],
                "title": "DataMeta"
            },
            "DataTypes": {
                "type": "string",
                "enum": [
                    "actual",
                    "predicted"
                ],
                "title": "DataTypes"
            },
            "Education": {
                "properties": {
                    "nursery": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Nursery",
                        "description": "Nurseries providing pre school age childcare."
                    },
                    "primary": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Primary",
                        "description": "Schools covering years reception to year 6."
                    },
                    "secondary": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secondary",
                        "description": "Schools covering years 7 to 11."
                    },
                    "post_16": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Post 16",
                        "description": "Schools and colleges providing non university education post 16."
                    },
                    "all_through": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "All Through",
                        "description": "Schools covering all standard school years 1 to 11."
                    },
                    "pru": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pru",
                        "description": "Specialist pupil referral units."
                    },
                    "special": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Special",
                        "description": "Schools providing for special educational needs."
                    },
                    "independent": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Independent",
                        "description": "Independent schools."
                    },
                    "universities": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SchoolItem"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Universities",
                        "description": "Universities."
                    }
                },
                "type": "object",
                "title": "Education"
            },
            "EnergyEfficiency": {
                "properties": {
                    "current_rating": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EnergyEfficiencyRatings"
                            }
                        ],
                        "description": "Current energy efficiency rating of the property."
                    },
                    "potential_rating": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EnergyEfficiencyRatings"
                            }
                        ],
                        "description": "Potential energy efficiency rating of the property."
                    },
                    "current_efficiency": {
                        "type": "integer",
                        "title": "Current Efficiency",
                        "description": "Current energy efficiency value of the property."
                    },
                    "potential_efficiency": {
                        "type": "integer",
                        "title": "Potential Efficiency",
                        "description": "Potential energy efficiency value of the property."
                    }
                },
                "type": "object",
                "required": [
                    "current_rating",
                    "potential_rating",
                    "current_efficiency",
                    "potential_efficiency"
                ],
                "title": "EnergyEfficiency"
            },
            "EnergyEfficiencyRatings": {
                "type": "string",
                "enum": [
                    "A",
                    "B",
                    "C",
                    "D",
                    "E",
                    "F",
                    "G"
                ],
                "title": "EnergyEfficiencyRatings"
            },
            "EnvironmentalImpact": {
                "properties": {
                    "current_impact": {
                        "type": "integer",
                        "title": "Current Impact",
                        "description": "Current environmental impact of the property."
                    },
                    "potential_impact": {
                        "type": "integer",
                        "title": "Potential Impact",
                        "description": "Potential environmental impact of the property."
                    }
                },
                "type": "object",
                "required": [
                    "current_impact",
                    "potential_impact"
                ],
                "title": "EnvironmentalImpact"
            },
            "EpcRating": {
                "properties": {
                    "lmk_key": {
                        "type": "string",
                        "title": "Lmk Key",
                        "description": "Unique identifier from the energy performance register."
                    },
                    "lodgement_date": {
                        "type": "string",
                        "title": "Lodgement Date",
                        "description": "The date the energy performance results were lodged with the register."
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Expiry Date",
                        "description": "The date the energy performance results expire."
                    },
                    "address1": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Address1",
                        "description": "The EPC address string line 1"
                    },
                    "address2": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Address2",
                        "description": "The EPC address string line 2"
                    },
                    "address3": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Address3",
                        "description": "The EPC address string line 3"
                    },
                    "postcode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Postcode",
                        "description": "The EPC postcode"
                    },
                    "number_habitable_rooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Habitable Rooms",
                        "description": "Habitable rooms include any living room, sitting room,\n    dining room, bedroom, study and similar..."
                    },
                    "number_heated_rooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Heated Rooms",
                        "description": "The number of heated rooms in the property..."
                    },
                    "extension_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extension Count",
                        "description": "The number of extensions added to the property. Between 0 and 4."
                    },
                    "total_floor_area": {
                        "type": "number",
                        "title": "Total Floor Area",
                        "description": "The total useful floor area..."
                    },
                    "floor_level": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Floor Level",
                        "description": "Flats and maisonettes only. Floor level relative..."
                    },
                    "floor_height": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Floor Height",
                        "description": "Average height of the storey in metres."
                    },
                    "flat_top_storey": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Flat Top Storey",
                        "description": "Whether the flat is on the top storey"
                    },
                    "flat_storey_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Flat Storey Count",
                        "description": "The number of storeys in the apartment block."
                    },
                    "main_fuel": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Main Fuel",
                        "description": "The type of fuel used to power the central heating..."
                    },
                    "mains_gas_flag": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mains Gas Flag",
                        "description": "Whether mains gas is available..."
                    },
                    "mainheat_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mainheat Description",
                        "description": "Overall description of the property feature"
                    },
                    "mainheat_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mainheat Energy Eff",
                        "description": "The energy efficiency rating for the main heater."
                    },
                    "main_heating_controls": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Main Heating Controls",
                        "description": "The control mechanism for the main heating system."
                    },
                    "secondheat_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Secondheat Description",
                        "description": "Description of the secondary heater."
                    },
                    "hotwater_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hotwater Description",
                        "description": "Overall description of the property feature"
                    },
                    "hot_water_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hot Water Energy Eff",
                        "description": "Energy efficiency of the hot water system."
                    },
                    "windows_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Windows Description",
                        "description": "Overall description of the property feature"
                    },
                    "windows_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Windows Energy Eff",
                        "description": "Energy efficiency rating for the windows."
                    },
                    "glazed_area": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Glazed Area",
                        "description": "Ranged estimate of the total glazed area of the Habitable Area in sqm."
                    },
                    "glazed_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Glazed Type",
                        "description": "The type of glazing. From British Fenestration Rating Council or manufacturer declaration..."
                    },
                    "walls_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Walls Description",
                        "description": "Overall description of the property feature"
                    },
                    "walls_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Walls Energy Eff",
                        "description": "Energy efficiency rating for the walls."
                    },
                    "roof_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Roof Description",
                        "description": "Overall description of the property feature"
                    },
                    "roof_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Roof Energy Eff",
                        "description": "Energy efficiency rating for the roof."
                    },
                    "floor_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Floor Description",
                        "description": "Description of the floor material or structure."
                    },
                    "floor_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Floor Energy Eff",
                        "description": "Energy efficiency rating for the floor."
                    },
                    "lighting_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Lighting Description",
                        "description": "Description of the lighting system."
                    },
                    "lighting_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Lighting Energy Eff",
                        "description": "Energy efficiency rating for the lighting."
                    },
                    "sheating_energy_eff": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sheating Energy Eff",
                        "description": "Energy efficiency rating for the external sheathing."
                    },
                    "wind_turbine_count": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Wind Turbine Count",
                        "description": "Number of wind turbines present."
                    },
                    "environmental_impact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EnvironmentalImpact"
                            }
                        ],
                        "description": "Properties are rated in a scale..."
                    },
                    "energy_efficiency": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EnergyEfficiency"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Properties are given a rating from A..."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata."
                    }
                },
                "type": "object",
                "required": [
                    "lmk_key",
                    "lodgement_date",
                    "expiry_date",
                    "total_floor_area",
                    "mainheat_description",
                    "mainheat_energy_eff",
                    "main_heating_controls",
                    "secondheat_description",
                    "hotwater_description",
                    "hot_water_energy_eff",
                    "windows_description",
                    "windows_energy_eff",
                    "glazed_area",
                    "glazed_type",
                    "walls_description",
                    "walls_energy_eff",
                    "roof_description",
                    "roof_energy_eff",
                    "floor_description",
                    "floor_energy_eff",
                    "lighting_description",
                    "lighting_energy_eff",
                    "sheating_energy_eff",
                    "wind_turbine_count",
                    "environmental_impact"
                ],
                "title": "EpcRating"
            },
            "ErrorAttributes": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "The status of the error response."
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "A short title describing the error."
                    },
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "A detailed description of the error."
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "title",
                    "detail"
                ],
                "title": "ErrorAttributes"
            },
            "EstimatedMarketValue": {
                "properties": {
                    "month": {
                        "type": "integer",
                        "title": "Month",
                        "description": "Month of the estimated market value."
                    },
                    "year": {
                        "type": "integer",
                        "title": "Year",
                        "description": "Year of the estimated market value."
                    },
                    "estimated_market_value": {
                        "type": "number",
                        "title": "Estimated Market Value",
                        "description": "Estimated market value of the property."
                    },
                    "estimated_market_value_rounded": {
                        "type": "number",
                        "title": "Estimated Market Value Rounded",
                        "description": "Rounded estimated market value of the property."
                    }
                },
                "type": "object",
                "required": [
                    "month",
                    "year",
                    "estimated_market_value",
                    "estimated_market_value_rounded"
                ],
                "title": "EstimatedMarketValue"
            },
            "EstimatedRentalValue": {
                "properties": {
                    "estimated_monthly_rental_value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Estimated Monthly Rental Value",
                        "description": "The estimated monthly rental value for the property."
                    },
                    "estimated_annual_rental_yield": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Estimated Annual Rental Yield",
                        "description": "The estimated annual rental yield for the property."
                    }
                },
                "type": "object",
                "required": [
                    "estimated_monthly_rental_value",
                    "estimated_annual_rental_yield"
                ],
                "title": "EstimatedRentalValue"
            },
            "FastAPIErrorAttributes": {
                "properties": {
                    "status": {
                        "type": "integer",
                        "title": "Status",
                        "description": "The HTTP status code number."
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The HTTP status code description string."
                    },
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationErrorAttributes"
                        },
                        "type": "array",
                        "title": "Detail",
                        "description": "List of validation errors providing detailed validation error information."
                    },
                    "request_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Request Id",
                        "description": "\nA unique ID for the request.\n\nThis should be provided when reporting errors for quicker support.\n"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "The version of the API."
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "title",
                    "detail",
                    "request_id",
                    "version"
                ],
                "title": "FastAPIErrorAttributes"
            },
            "FloodRisk": {
                "properties": {
                    "rivers_and_seas": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RiversAndSeas"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The property's risk of flooding from rivers and seas."
                    },
                    "surface_water": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SurfaceWater"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The property's risk of flooding from surface water."
                    }
                },
                "type": "object",
                "required": [
                    "rivers_and_seas",
                    "surface_water"
                ],
                "title": "FloodRisk"
            },
            "GeoPointLocation": {
                "properties": {
                    "coordinates": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/fastapi_street_data__models__responses__common__Coordinates"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nThe geographical coordinates specifying the latitude and longitude of the location.\n\nIf provided, it includes the latitude and longitude values.\n"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoordinateType"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nWhether the coordinates are specific to the property or the postcode\n(where property specific coordinates are not known).\n"
                    }
                },
                "type": "object",
                "required": [
                    "coordinates"
                ],
                "title": "GeoPointLocation"
            },
            "IntMeta": {
                "properties": {
                    "value": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Value",
                        "description": "The integer value."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata."
                    }
                },
                "type": "object",
                "title": "IntMeta"
            },
            "Lease": {
                "properties": {
                    "date_of_lease": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Date Of Lease",
                        "description": "The date when the lease for the property was initiated."
                    },
                    "lease_term": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Lease Term",
                        "description": "The term of the lease agreement for the property."
                    },
                    "formatted_lease_term": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Formatted Lease Term",
                        "description": "Formatted version of the lease term."
                    },
                    "calculated_start_of_lease": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Calculated Start Of Lease",
                        "description": "Calculated start date of the lease."
                    },
                    "calculated_end_of_lease": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Calculated End Of Lease",
                        "description": "Calculated end date of the lease."
                    },
                    "lease_term_in_days": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Lease Term In Days",
                        "description": "The term of the lease in days."
                    },
                    "remaining_lease_term_in_days": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Remaining Lease Term In Days",
                        "description": "Remaining term of the lease in days."
                    }
                },
                "type": "object",
                "required": [
                    "date_of_lease",
                    "lease_term"
                ],
                "title": "Lease"
            },
            "ListedBuilding": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "The ID of the listed building."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "The name of the listed building."
                    },
                    "grade": {
                        "type": "string",
                        "title": "Grade",
                        "description": "The grade of the listed building."
                    },
                    "listed_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Listed Date",
                        "description": "The date the building was listed."
                    },
                    "amended_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Amended Date",
                        "description": "The date the listing was amended."
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PointModel"
                            },
                            {
                                "$ref": "#/components/schemas/MultiPointModel"
                            }
                        ],
                        "title": "Location",
                        "description": "The location of the building."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "grade",
                    "listed_date",
                    "amended_date",
                    "location"
                ],
                "title": "ListedBuilding"
            },
            "ListingAddress": {
                "properties": {
                    "royal_mail_format": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ListingRoyalMailFormat"
                            }
                        ],
                        "description": "The address format according to the Royal Mail PAF."
                    },
                    "is_none_residential": {
                        "type": "boolean",
                        "title": "Is None Residential",
                        "description": "Flag indicating if the property is non-residential."
                    }
                },
                "type": "object",
                "required": [
                    "royal_mail_format",
                    "is_none_residential"
                ],
                "title": "ListingAddress"
            },
            "ListingRoyalMailFormat": {
                "properties": {
                    "thoroughfare": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Thoroughfare",
                        "description": "\nAlso known as the street or road name. In general each Thoroughfare Name will have a separate Postcode.\n\nLonger Thoroughfares with high number ranges often have multiple Postcodes covering the entire length of\nthe road, with breaks at suitable points e.g. junctions or natural breaks in the road.\n"
                    },
                    "dependent_thoroughfare": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dependent Thoroughfare",
                        "description": "\nUsed to supplement thoroughfare.\n\nWhen a thoroughfare name is used twice in the same Post Town, the dependant thoroughfare is added to uniquely\nidentify a delivery point.\n"
                    },
                    "dependent_locality": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dependent Locality",
                        "description": "\nWhen the same thoroughfare name reoccurs in a Post town, it may not be possible to make it dependant on a\ndependant thoroughfare.\n\nIn this case the thoroughfare is dependant on a locality.\n"
                    },
                    "double_dependent_locality": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Double Dependent Locality",
                        "description": "\nUsed to supplement Dependant Locality. A Double Dependant Locality supplied along with a Dependant Locality\nif the Dependant Locality exists twice in the same locality.\n"
                    },
                    "post_town": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Post Town",
                        "description": "\nA Post Town is mandatory for delivery of mail to a Delivery Point.\n\nThis is not necessarily the nearest town geographically, but a routing instruction to the Royal Mail\ndelivery office sorting mail for that Delivery Point.\n\nA Post Town will always be present in every address, and for some Localities the Post Town will be the only\nlocality element present.\n"
                    },
                    "postcode": {
                        "type": "string",
                        "title": "Postcode",
                        "description": "Correctly formatted postcode. Capitalised and spaced."
                    }
                },
                "type": "object",
                "required": [
                    "thoroughfare",
                    "dependent_thoroughfare",
                    "dependent_locality",
                    "double_dependent_locality",
                    "post_town",
                    "postcode"
                ],
                "title": "ListingRoyalMailFormat"
            },
            "ListingType": {
                "type": "string",
                "enum": [
                    "sale",
                    "rental"
                ],
                "title": "ListingType"
            },
            "Localities": {
                "properties": {
                    "conservation_area_data_available": {
                        "type": "boolean",
                        "title": "Conservation Area Data Available",
                        "description": "Flag indicating if conservation area data is available for this property's local authority."
                    },
                    "conservation_area": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Conservation Area",
                        "description": "Conservation area in which the property is located."
                    },
                    "ward": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ward",
                        "description": "Ward of the locality."
                    },
                    "local_authority": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Local Authority",
                        "description": "Local authority governing the locality."
                    },
                    "county": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "County",
                        "description": "County or administrative region of the locality."
                    },
                    "country": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Country",
                        "description": "Country of the locality."
                    },
                    "parliamentary_constituency_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parliamentary Constituency Name",
                        "description": "Name of the parliamentary constituency."
                    },
                    "national_park": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "National Park",
                        "description": "National park in which the locality is located."
                    },
                    "police_force": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Police Force",
                        "description": "Police force responsible for the locality."
                    },
                    "primary_care_organisation": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Primary Care Organisation",
                        "description": "Primary care organization associated with the locality."
                    },
                    "rural_urban_classification": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rural Urban Classification",
                        "description": "Classification of the locality as rural or urban."
                    }
                },
                "type": "object",
                "title": "Localities"
            },
            "MarketStatisticsLocalAuthority": {
                "properties": {
                    "count_of_properties": {
                        "type": "integer",
                        "title": "Count Of Properties",
                        "description": "Total number of properties in the area"
                    },
                    "count_total_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Count Total Properties Sold Last 12 Months",
                        "description": "The total count of properties sold in the area in the last 12 months."
                    },
                    "average_price_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Average Price Properties Sold Last 12 Months",
                        "description": "The average price of properties sold in the area in the last 12 months."
                    },
                    "sales_yearly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByYearItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Yearly",
                        "description": "Sales statistics by calendar year for all properties in this area."
                    },
                    "sales_monthly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByMonthItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Monthly",
                        "description": "Sales statistics by calendar month for all properties in this area for the last 36 months."
                    },
                    "sales_price_bracket": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByPriceItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Price Bracket",
                        "description": "Sales statistics for all properties in this area by price bracket in the last 12 months."
                    },
                    "detached_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for detached properties."
                    },
                    "semi_detached_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for semi detached properties."
                    },
                    "terraced_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for terraced properties."
                    },
                    "flats_maisonettes_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for flat/maisonette properties."
                    },
                    "local_authority_code": {
                        "type": "string",
                        "title": "Local Authority Code",
                        "description": "The local authority code for the given market statistics."
                    },
                    "local_authority_name": {
                        "type": "string",
                        "title": "Local Authority Name",
                        "description": "The local authority name for the given market statistics."
                    }
                },
                "type": "object",
                "required": [
                    "count_of_properties",
                    "local_authority_code",
                    "local_authority_name"
                ],
                "title": "MarketStatisticsLocalAuthority"
            },
            "MarketStatisticsNational": {
                "properties": {
                    "count_of_properties": {
                        "type": "integer",
                        "title": "Count Of Properties",
                        "description": "Total number of properties in the area"
                    },
                    "count_total_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Count Total Properties Sold Last 12 Months",
                        "description": "The total count of properties sold in the area in the last 12 months."
                    },
                    "average_price_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Average Price Properties Sold Last 12 Months",
                        "description": "The average price of properties sold in the area in the last 12 months."
                    },
                    "sales_yearly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByYearItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Yearly",
                        "description": "Sales statistics by calendar year for all properties in this area."
                    },
                    "sales_monthly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByMonthItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Monthly",
                        "description": "Sales statistics by calendar month for all properties in this area for the last 36 months."
                    },
                    "sales_price_bracket": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByPriceItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Price Bracket",
                        "description": "Sales statistics for all properties in this area by price bracket in the last 12 months."
                    },
                    "detached_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for detached properties."
                    },
                    "semi_detached_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for semi detached properties."
                    },
                    "terraced_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for terraced properties."
                    },
                    "flats_maisonettes_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for flat/maisonette properties."
                    },
                    "country": {
                        "type": "string",
                        "title": "Country",
                        "description": "The country for the given market statistics."
                    }
                },
                "type": "object",
                "required": [
                    "count_of_properties",
                    "country"
                ],
                "title": "MarketStatisticsNational"
            },
            "MarketStatisticsOutcode": {
                "properties": {
                    "count_of_properties": {
                        "type": "integer",
                        "title": "Count Of Properties",
                        "description": "Total number of properties in the area"
                    },
                    "count_total_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Count Total Properties Sold Last 12 Months",
                        "description": "The total count of properties sold in the area in the last 12 months."
                    },
                    "average_price_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Average Price Properties Sold Last 12 Months",
                        "description": "The average price of properties sold in the area in the last 12 months."
                    },
                    "sales_yearly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByYearItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Yearly",
                        "description": "Sales statistics by calendar year for all properties in this area."
                    },
                    "sales_monthly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByMonthItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Monthly",
                        "description": "Sales statistics by calendar month for all properties in this area for the last 36 months."
                    },
                    "sales_price_bracket": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByPriceItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Price Bracket",
                        "description": "Sales statistics for all properties in this area by price bracket in the last 12 months."
                    },
                    "detached_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for detached properties."
                    },
                    "semi_detached_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for semi detached properties."
                    },
                    "terraced_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for terraced properties."
                    },
                    "flats_maisonettes_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeMarketStats"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for flat/maisonette properties."
                    },
                    "outcode": {
                        "type": "string",
                        "title": "Outcode",
                        "description": "The outcode for the given market statistics."
                    }
                },
                "type": "object",
                "required": [
                    "count_of_properties",
                    "outcode"
                ],
                "title": "MarketStatisticsOutcode"
            },
            "MarketStatisticsWrapper": {
                "properties": {
                    "outcode": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MarketStatisticsOutcode"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for a specific outcode (postcode area)"
                    },
                    "local_authority": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MarketStatisticsLocalAuthority"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for a specific local authority"
                    },
                    "national": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MarketStatisticsNational"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Market statistics for the entire national area"
                    }
                },
                "type": "object",
                "required": [
                    "outcode",
                    "local_authority",
                    "national"
                ],
                "title": "MarketStatisticsWrapper"
            },
            "Meta": {
                "properties": {
                    "data_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DataTypes"
                            }
                        ],
                        "description": "Flag to indicate if the data source is from a machine learning model or the actual value."
                    },
                    "source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Source",
                        "description": "The source of the data."
                    },
                    "attribution_string": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Attribution String",
                        "description": "The attribution string which must be presented when using the data."
                    }
                },
                "type": "object",
                "required": [
                    "data_type"
                ],
                "title": "Meta"
            },
            "MobileEnum": {
                "type": "integer",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "title": "MobileEnum"
            },
            "MobileServiceCoverageItem": {
                "properties": {
                    "network": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Network",
                        "description": "The mobile network associated with the service coverage."
                    },
                    "data_indoor_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Data coverage indoors for 4G."
                    },
                    "data_outdoor_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Data coverage outdoors for 4G."
                    },
                    "data_indoor_no_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Data coverage indoors without 4G."
                    },
                    "data_outdoor_no_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Data coverage outdoors without 4G."
                    },
                    "voice_indoor_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Voice coverage indoors for 4G."
                    },
                    "voice_outdoor_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Voice coverage outdoors for 4G."
                    },
                    "voice_indoor_no_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Voice coverage indoors without 4G."
                    },
                    "voice_outdoor_no_4g": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MobileEnum"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Voice coverage outdoors without 4G."
                    }
                },
                "type": "object",
                "required": [
                    "network",
                    "data_indoor_4g",
                    "data_outdoor_4g",
                    "data_indoor_no_4g",
                    "data_outdoor_no_4g",
                    "voice_indoor_4g",
                    "voice_outdoor_4g",
                    "voice_indoor_no_4g",
                    "voice_outdoor_no_4g"
                ],
                "title": "MobileServiceCoverageItem"
            },
            "MultiPointModel": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Multi Point",
                        "default": "MultiPoint"
                    },
                    "coordinates": {
                        "items": {
                            "$ref": "#/components/schemas/pydantic_geojson___base__Coordinates"
                        },
                        "type": "array",
                        "title": "Coordinates"
                    }
                },
                "type": "object",
                "required": [
                    "coordinates"
                ],
                "title": "MultiPointModel"
            },
            "MultiPolygonModel": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Multi Polygon",
                        "default": "MultiPolygon"
                    },
                    "coordinates": {
                        "items": {
                            "items": {
                                "items": {
                                    "$ref": "#/components/schemas/pydantic_geojson___base__Coordinates"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Coordinates"
                    }
                },
                "type": "object",
                "required": [
                    "coordinates"
                ],
                "title": "MultiPolygonModel"
            },
            "MultiplePlanningApplication": {
                "properties": {
                    "reference_number": {
                        "type": "string",
                        "title": "Reference Number",
                        "description": "The unique reference number of the planning application."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "The URL link to access more information about the planning application."
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "A brief description of the planning application."
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "The current status of the planning application."
                    },
                    "validated_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Validated Date",
                        "description": "The date when the planning application was validated"
                    },
                    "received_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Received Date",
                        "description": "The date when the planning application was received"
                    },
                    "decision": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Decision",
                        "description": "The decision status of the planning application"
                    },
                    "decision_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Decision Date",
                        "description": "The date when the decision on the planning application was made"
                    },
                    "appeal_status": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Appeal Status",
                        "description": "The status of any appeals associated with the planning application"
                    },
                    "appeal_decision": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Appeal Decision",
                        "description": "The decision made on any appeals associated with the planning application"
                    },
                    "additional_dates": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlanningDatesObject"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional dates related to the planning application, encapsulated in a PlanningDatesObject"
                    },
                    "street_group_property_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Street Group Property Id",
                        "description": "The Street Group Property ID (barcode)"
                    },
                    "address": {
                        "type": "string",
                        "title": "Address",
                        "description": "The address associated with the planning application."
                    },
                    "postcode": {
                        "type": "string",
                        "title": "Postcode",
                        "description": "The postcode associated with the planning application."
                    },
                    "council": {
                        "type": "string",
                        "title": "Council",
                        "description": "The council related to the planning application."
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/GeoPointLocation"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The geographic location of the planning application."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "reference_number",
                    "url",
                    "description",
                    "status",
                    "validated_date",
                    "received_date",
                    "decision",
                    "decision_date",
                    "appeal_status",
                    "appeal_decision",
                    "street_group_property_id",
                    "address",
                    "postcode",
                    "council"
                ],
                "title": "MultiplePlanningApplication"
            },
            "MultipleProperty": {
                "properties": {
                    "street_group_property_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Street Group Property Id"
                    },
                    "address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Addresses"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Localities of the property e.g. council, ward, parliamentary seat."
                    },
                    "localities": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Localities"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Localities of the property e.g. council, ward, parliamentary seat."
                    },
                    "identities": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyIdentifiers"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Unique IDs for the property, includes street group, royal mail and ordnance survey IDs."
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/GeoPointLocation"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The geographic location of the property."
                    },
                    "property_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeObject"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The type of property."
                    },
                    "construction_age_band": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Construction Age Band",
                        "description": "The age band in which the property was constructed sourced from the latest energy performance certificate."
                    },
                    "tenure": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Tenure"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Type and details of the property tenure."
                    },
                    "occupancy": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Occupancy"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Detail of the property occupancy, null where occupancy is unknown."
                    },
                    "title_deeds": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TitleDeeds"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Registered titles relating to the property and their associated polygons."
                    },
                    "plot": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Plot"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Details of the property's plot."
                    },
                    "outdoor_space": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OutdoorSpace"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Details of the properties outdoor space, including garden size, location and direction."
                    },
                    "listed_buildings_on_plot": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ListedBuilding"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Listed Buildings On Plot",
                        "description": "\nArray of listed buildings where the location of the listed building is within the plot boundary\nfor the property.\n\nListed buildings cover a wide variety of building types and as such some properties may\nhave multiple listed buildings within the plot boundary and some properties may also be wholly contained\nwithin a listed building e.g flats in listed buildings.\n\nThis data is indicative and the specific listing status of any property should be checked with the relevant\nlisting authority.\n"
                    },
                    "internal_area_square_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Internal Area Square Metres",
                        "description": "The internal floor area of the property in square metres."
                    },
                    "is_bungalow": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BoolMeta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Indicates if the property is a bungalow."
                    },
                    "number_of_bedrooms": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IntMeta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The number of bedrooms in the property."
                    },
                    "number_of_bathrooms": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IntMeta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The number of bathrooms in the property."
                    },
                    "council_tax": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CouncilTax"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Detail of the council tax band and current annual charge for the property."
                    },
                    "energy_performance": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EpcRating"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Energy performance and associated attributes taken from the latest energy performance certificate."
                    },
                    "flood_risk": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/FloodRisk"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Type and detail of flood risks for the property. Data only available for properties in England."
                    },
                    "transactions": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PropertyTransactionAttributes"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transactions",
                        "description": "Sale transactions for the property recorded with HM Land Registry.\n\n**Note: Transaction data may be delayed due to processing backlogs at HM Land Registry.**"
                    },
                    "estimated_values": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/EstimatedMarketValue"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Estimated Values",
                        "description": "Monthly estimated value since the last sold date or past five years if property has no sale transaction data."
                    },
                    "estimated_rental_values": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EstimatedRentalValue"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Current estimated rental value and annual % yield for the property."
                    },
                    "propensity_to_sell_score": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Propensity To Sell Score",
                        "description": "The propensity to sell score."
                    },
                    "education": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Education"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Education details for the surrounding area."
                    },
                    "transport": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Transport"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Transport details for the surrounding area."
                    },
                    "distance_from_point": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance From Point",
                        "description": "Distance from the point passed, only returned for area requests where a single point is passed."
                    },
                    "latest_transaction_date": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Transaction Date",
                        "description": "\nThe date the property was last sold with format YYYY-MM-DD.\n\nLand registry data starts from 1995, if a property hasn't been sold since this year this value will default\nto `1995-01-01`.\n"
                    },
                    "restrictive_covenants": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/RestrictiveCovenants"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Restrictive Covenants",
                        "description": "List of restrictive covenants associated with the property."
                    },
                    "coastal_erosion": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosion"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nCoastal Erosion data for properties that are within 1km of a shoreline.\n\nContains the 2 nearest coastal erosion plans to the property.\n"
                    }
                },
                "type": "object",
                "title": "MultipleProperty"
            },
            "OSGBCoordinates": {
                "prefixItems": [
                    {
                        "type": "number",
                        "title": "Lon"
                    },
                    {
                        "type": "number",
                        "title": "Lat"
                    }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
            },
            "OSGBMultiPolygonModel": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The type of polygon model."
                    },
                    "coordinates": {
                        "items": {
                            "items": {
                                "items": {
                                    "$ref": "#/components/schemas/OSGBCoordinates"
                                },
                                "type": "array"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Coordinates",
                        "description": "A list of lists containing OSGBCoordinates for the polygon."
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "coordinates"
                ],
                "title": "OSGBMultiPolygonModel"
            },
            "OSGBPolygonModel": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The type of polygon model."
                    },
                    "coordinates": {
                        "items": {
                            "items": {
                                "$ref": "#/components/schemas/OSGBCoordinates"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Coordinates",
                        "description": "A list of lists containing OSGBCoordinates for the polygon."
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "coordinates"
                ],
                "title": "OSGBPolygonModel"
            },
            "Occupancy": {
                "properties": {
                    "owner_occupied": {
                        "type": "boolean",
                        "title": "Owner Occupied",
                        "description": "Flag indicating if the property is owner-occupied."
                    },
                    "occupancy_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OccupancyTypes"
                            }
                        ],
                        "description": "Type of occupancy for the property."
                    }
                },
                "type": "object",
                "required": [
                    "owner_occupied",
                    "occupancy_type"
                ],
                "title": "Occupancy"
            },
            "OccupancyTypes": {
                "type": "string",
                "enum": [
                    "Rented (private)",
                    "Rented (social)",
                    "Owner-occupied"
                ],
                "title": "OccupancyTypes"
            },
            "OrdnanceSurveyIdentifiers": {
                "properties": {
                    "uprn": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Uprn",
                        "description": "Unique property reference number."
                    },
                    "parent_uprn": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Uprn",
                        "description": "Parent unique property reference number."
                    },
                    "usrn": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Usrn",
                        "description": "Unique street reference number."
                    },
                    "os_topo_toid": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Os Topo Toid",
                        "description": "Topographic feature ID for the building."
                    },
                    "os_address_toid": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Os Address Toid",
                        "description": "Feature ID for the address point."
                    },
                    "os_roadlink_toid": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Os Roadlink Toid",
                        "description": "The OS MasterMap Highways Network road link that the addressable object refers to."
                    }
                },
                "type": "object",
                "title": "OrdnanceSurveyIdentifiers"
            },
            "OutdoorSpace": {
                "properties": {
                    "outdoor_space_area_square_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Outdoor Space Area Square Metres",
                        "description": "The area of properties outdoor space in square meters."
                    },
                    "garden_direction": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Garden Direction",
                        "description": "The direction in which the majority of the garden faces."
                    },
                    "garden_primary_orientation": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Garden Primary Orientation",
                        "description": "The location in which the majority of the garden appears in relation to the property."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Metadata related to outside space of the property."
                    }
                },
                "type": "object",
                "required": [
                    "garden_direction",
                    "garden_primary_orientation",
                    "meta"
                ],
                "title": "OutdoorSpace"
            },
            "PlanningApplication": {
                "properties": {
                    "reference_number": {
                        "type": "string",
                        "title": "Reference Number",
                        "description": "The unique reference number of the planning application."
                    },
                    "url": {
                        "type": "string",
                        "title": "Url",
                        "description": "The URL link to access more information about the planning application."
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "A brief description of the planning application."
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "The current status of the planning application."
                    },
                    "validated_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Validated Date",
                        "description": "The date when the planning application was validated"
                    },
                    "received_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Received Date",
                        "description": "The date when the planning application was received"
                    },
                    "decision": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Decision",
                        "description": "The decision status of the planning application"
                    },
                    "decision_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Decision Date",
                        "description": "The date when the decision on the planning application was made"
                    },
                    "appeal_status": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Appeal Status",
                        "description": "The status of any appeals associated with the planning application"
                    },
                    "appeal_decision": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Appeal Decision",
                        "description": "The decision made on any appeals associated with the planning application"
                    },
                    "additional_dates": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PlanningDatesObject"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional dates related to the planning application, encapsulated in a PlanningDatesObject"
                    }
                },
                "type": "object",
                "required": [
                    "reference_number",
                    "url",
                    "description",
                    "status",
                    "validated_date",
                    "received_date",
                    "decision",
                    "decision_date",
                    "appeal_status",
                    "appeal_decision"
                ],
                "title": "PlanningApplication"
            },
            "PlanningDatesObject": {
                "properties": {
                    "actual_committee_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Actual Committee Date",
                        "description": "The date on which the planning committee met and made an actual decision."
                    },
                    "agreed_extension_to_statutory_determination_deadline": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agreed Extension To Statutory Determination Deadline",
                        "description": "The agreed extended deadline for the statutory determination."
                    },
                    "application_received_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Application Received Date",
                        "description": "The date when the planning application was received."
                    },
                    "application_validated_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Application Validated Date",
                        "description": "The date when the planning application was validated."
                    },
                    "decision_issued_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Decision Issued Date",
                        "description": "The date when the planning decision was officially issued."
                    },
                    "decision_made_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Decision Made Date",
                        "description": "The date when the planning decision was made."
                    },
                    "decision_printed_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Decision Printed Date",
                        "description": "The date when the planning decision was printed."
                    },
                    "last_advertised_in_press_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Advertised In Press Date",
                        "description": "The date when the last advertisement about the planning application was published in the press."
                    },
                    "last_site_notice_posted_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Last Site Notice Posted Date",
                        "description": "The date when the last site notice was posted."
                    },
                    "latest_advertisement_expiry_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Advertisement Expiry Date",
                        "description": "The date when the latest advertisement about the planning application will expire."
                    },
                    "latest_neighbour_consultation_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Neighbour Consultation Date",
                        "description": "The date of the latest consultation with neighbors about the planning application."
                    },
                    "latest_site_notice_expiry_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Site Notice Expiry Date",
                        "description": "The date when the latest site notice will expire."
                    },
                    "latest_statutory_consultee_consultation_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Statutory Consultee Consultation Date",
                        "description": "The date of the latest consultation with statutory consultees."
                    },
                    "neighbour_comments_should_be_submitted_by_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Neighbour Comments Should Be Submitted By Date",
                        "description": "The deadline by which neighbor comments should be submitted."
                    },
                    "overall_consultation_expiry_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Overall Consultation Expiry Date",
                        "description": "The date when the overall consultation period will expire."
                    },
                    "permission_expiry_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Permission Expiry Date",
                        "description": "The date when the planning permission will expire."
                    },
                    "statutory_consultee_consultation_expiry_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Statutory Consultee Consultation Expiry Date",
                        "description": "The date when the consultation with statutory consultees will expire."
                    },
                    "target_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Target Date",
                        "description": "The target date for a certain stage of the planning process."
                    }
                },
                "type": "object",
                "title": "PlanningDatesObject"
            },
            "Plot": {
                "properties": {
                    "total_plot_area_square_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Plot Area Square Metres",
                        "description": "Total area of the plot in square metres."
                    },
                    "polygons": {
                        "items": {
                            "$ref": "#/components/schemas/TitlePolygon"
                        },
                        "type": "array",
                        "title": "Polygons",
                        "description": "List of title polygons associated with the plot."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Metadata related to the plot."
                    }
                },
                "type": "object",
                "required": [
                    "polygons",
                    "meta"
                ],
                "title": "Plot"
            },
            "PointModel": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Point",
                        "default": "Point"
                    },
                    "coordinates": {
                        "$ref": "#/components/schemas/pydantic_geojson___base__Coordinates"
                    }
                },
                "type": "object",
                "required": [
                    "coordinates"
                ],
                "title": "PointModel"
            },
            "PolygonModel": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Polygon",
                        "default": "Polygon"
                    },
                    "coordinates": {
                        "items": {
                            "items": {
                                "$ref": "#/components/schemas/pydantic_geojson___base__Coordinates"
                            },
                            "type": "array"
                        },
                        "type": "array",
                        "title": "Coordinates"
                    }
                },
                "type": "object",
                "required": [
                    "coordinates"
                ],
                "title": "PolygonModel"
            },
            "PredictedBroadbandSpeeds": {
                "properties": {
                    "broadband_type": {
                        "type": "string",
                        "title": "Broadband Type",
                        "description": "The broadband type."
                    },
                    "maximum_predicted_download_speed": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Maximum Predicted Download Speed",
                        "description": "The maximum predicted download speed for this broadband type."
                    },
                    "maximum_predicted_upload_speed": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Maximum Predicted Upload Speed",
                        "description": "The maximum predicted upload speed for this broadband type."
                    }
                },
                "type": "object",
                "required": [
                    "broadband_type"
                ],
                "title": "PredictedBroadbandSpeeds"
            },
            "Property": {
                "properties": {
                    "street_group_property_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Street Group Property Id"
                    },
                    "address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Addresses"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Localities of the property e.g. council, ward, parliamentary seat."
                    },
                    "localities": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Localities"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Localities of the property e.g. council, ward, parliamentary seat."
                    },
                    "identities": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyIdentifiers"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Unique IDs for the property, includes street group, royal mail and ordnance survey IDs."
                    },
                    "location": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/GeoPointLocation"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The geographic location of the property."
                    },
                    "property_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeObject"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The type of property."
                    },
                    "construction_age_band": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Construction Age Band",
                        "description": "The age band in which the property was constructed sourced from the latest energy performance certificate."
                    },
                    "tenure": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Tenure"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Type and details of the property tenure."
                    },
                    "occupancy": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Occupancy"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Detail of the property occupancy, null where occupancy is unknown."
                    },
                    "title_deeds": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TitleDeeds"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Registered titles relating to the property and their associated polygons."
                    },
                    "plot": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Plot"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Details of the property's plot."
                    },
                    "outdoor_space": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OutdoorSpace"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Details of the properties outdoor space, including garden size, location and direction."
                    },
                    "listed_buildings_on_plot": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ListedBuilding"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Listed Buildings On Plot",
                        "description": "\nArray of listed buildings where the location of the listed building is within the plot boundary\nfor the property.\n\nListed buildings cover a wide variety of building types and as such some properties may\nhave multiple listed buildings within the plot boundary and some properties may also be wholly contained\nwithin a listed building e.g flats in listed buildings.\n\nThis data is indicative and the specific listing status of any property should be checked with the relevant\nlisting authority.\n"
                    },
                    "internal_area_square_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Internal Area Square Metres",
                        "description": "The internal floor area of the property in square metres."
                    },
                    "is_bungalow": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/BoolMeta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Indicates if the property is a bungalow."
                    },
                    "number_of_bedrooms": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IntMeta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The number of bedrooms in the property."
                    },
                    "number_of_bathrooms": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IntMeta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The number of bathrooms in the property."
                    },
                    "council_tax": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CouncilTax"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Detail of the council tax band and current annual charge for the property."
                    },
                    "energy_performance": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EpcRating"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Energy performance and associated attributes taken from the latest energy performance certificate."
                    },
                    "flood_risk": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/FloodRisk"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Type and detail of flood risks for the property. Data only available for properties in England."
                    },
                    "transactions": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PropertyTransactionAttributes"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transactions",
                        "description": "Sale transactions for the property recorded with HM Land Registry.\n\n**Note: Transaction data may be delayed due to processing backlogs at HM Land Registry.**"
                    },
                    "estimated_values": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/EstimatedMarketValue"
                                },
                                "type": "array",
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Estimated Values",
                        "description": "Monthly estimated value since the last sold date or past five years if property has no sale transaction data."
                    },
                    "estimated_rental_values": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EstimatedRentalValue"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Current estimated rental value and annual % yield for the property."
                    },
                    "propensity_to_sell_score": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Propensity To Sell Score",
                        "description": "The propensity to sell score."
                    },
                    "education": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Education"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Education details for the surrounding area."
                    },
                    "transport": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Transport"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Transport details for the surrounding area."
                    },
                    "distance_from_point": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance From Point",
                        "description": "Distance from the point passed, only returned for area requests where a single point is passed."
                    },
                    "latest_transaction_date": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Latest Transaction Date",
                        "description": "\nThe date the property was last sold with format YYYY-MM-DD.\n\nLand registry data starts from 1995, if a property hasn't been sold since this year this value will default\nto `1995-01-01`.\n"
                    },
                    "restrictive_covenants": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/RestrictiveCovenants"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Restrictive Covenants",
                        "description": "List of restrictive covenants associated with the property."
                    },
                    "coastal_erosion": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CoastalErosion"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nCoastal Erosion data for properties that are within 1km of a shoreline.\n\nContains the 2 nearest coastal erosion plans to the property.\n"
                    },
                    "nearby_listed_buildings": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ListedBuilding"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Nearby Listed Buildings",
                        "description": "Listed buildings within a radius of the property."
                    },
                    "connectivity": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Connectivity"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Mobile and broadband details for the surrounding area."
                    },
                    "nearby_listings": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyListings"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Closest sale and letting listings within a radius of the property."
                    },
                    "nearby_completed_transactions": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/RecentlySoldTransaction"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Nearby Completed Transactions",
                        "description": "30 closest completed property sale transactions within 2km of the property in the last 12 months.\n\n**Note: Sale transactions only available for properties in England and Wales from 1995 ownwards.**"
                    },
                    "market_statistics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MarketStatisticsWrapper"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nProperty market statistics for the property outcode, local authority and country.\n\nMarket statistics currently only available for properties in England and Wales.\n"
                    },
                    "planning_applications": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/PlanningApplication"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Planning Applications",
                        "description": "Planning applications relating to the property.\n\n**Note: Data may not include all planning applications for a property. Planning applications are currently\navailable for 207 of the circa 339 planning authorities in England and Wales for the previous 2 years.**\n\n**Our coverage is constantly being enhanced and we will aim to add more planning authorities in\nfuture.**"
                    },
                    "nearby_planning_applications": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/MultiplePlanningApplication"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Nearby Planning Applications",
                        "description": "\"Planning applications within 500 metres of the property.\n\n**Note: Data may not include all planning applications for a property. Planning applications are currently\navailable for 207 of the circa 339 planning authorities in England and Wales for the previous 2 years.**\n\n**Our coverage is constantly being enhanced and we will aim to add more planning authorities in\nfuture.**"
                    }
                },
                "type": "object",
                "title": "Property"
            },
            "PropertyDetail": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/PropertyWrapper"
                    },
                    "meta": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PropertyMeta"
                            }
                        ],
                        "description": "Metadata related to the request."
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "meta"
                ],
                "title": "PropertyDetail"
            },
            "PropertyIdentifiers": {
                "properties": {
                    "street_group_property_id": {
                        "type": "string",
                        "title": "Street Group Property Id",
                        "description": "The Street Group Property ID (barcode)."
                    },
                    "royal_mail": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoyalMailIdentifiers"
                            }
                        ],
                        "description": "Identifiers related to Royal Mail."
                    },
                    "ordnance_survey": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OrdnanceSurveyIdentifiers"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Identifiers related to Ordnance Survey."
                    }
                },
                "type": "object",
                "required": [
                    "street_group_property_id",
                    "royal_mail"
                ],
                "title": "PropertyIdentifiers"
            },
            "PropertyListings": {
                "properties": {
                    "sale_listings": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SaleListing"
                                },
                                "type": "array",
                                "maxItems": 50,
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sale Listings",
                        "description": "Up to 50 closest current sale listings within 4 kilometres of the property."
                    },
                    "rental_listings": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/RentalListing"
                                },
                                "type": "array",
                                "maxItems": 50,
                                "minItems": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rental Listings",
                        "description": "Up to 50 closest current rental listings within 4 kilometres of the property."
                    }
                },
                "type": "object",
                "title": "PropertyListings"
            },
            "PropertyMeta": {
                "properties": {
                    "request_cost_gbp": {
                        "type": "number",
                        "title": "Request Cost Gbp",
                        "description": "The cost of the request in GBP."
                    },
                    "balance_gbp": {
                        "type": "number",
                        "title": "Balance Gbp",
                        "description": "The remaining balance in GBP."
                    }
                },
                "type": "object",
                "required": [
                    "request_cost_gbp",
                    "balance_gbp"
                ],
                "title": "PropertyMeta"
            },
            "PropertyTransactionAttributes": {
                "properties": {
                    "transaction_id": {
                        "type": "string",
                        "title": "Transaction Id",
                        "description": "The unique identifier for the property transaction."
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "title": "Date",
                        "description": "The date of the property transaction."
                    },
                    "price": {
                        "type": "integer",
                        "title": "Price",
                        "description": "The price of the property transaction."
                    },
                    "is_new_build": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is New Build",
                        "description": "Flag indicating if the property is a new build."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata associated with the transaction."
                    }
                },
                "type": "object",
                "required": [
                    "transaction_id",
                    "date",
                    "price",
                    "is_new_build"
                ],
                "title": "PropertyTransactionAttributes"
            },
            "PropertyType": {
                "type": "string",
                "enum": [
                    "Detached",
                    "Semi-Detached",
                    "Terraced",
                    "Flats/Maisonettes",
                    "Commercial",
                    "Non-Residential",
                    "Other"
                ],
                "title": "PropertyType"
            },
            "PropertyTypeMarketStats": {
                "properties": {
                    "property_type": {
                        "type": "string",
                        "title": "Property Type"
                    },
                    "count_of_properties": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Count Of Properties",
                        "description": "Count of this property type in the area"
                    },
                    "average_price_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Average Price Properties Sold Last 12 Months",
                        "description": "The average price of properties of this type sold in the area in the last 12 months."
                    },
                    "count_total_properties_sold_last_12_months": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Count Total Properties Sold Last 12 Months",
                        "description": "The count of properties of this type sold in the area in the last 12 months."
                    },
                    "sales_yearly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByYearItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Yearly",
                        "description": "Sales statistics by calendar year for this property type for the last 10 years."
                    },
                    "sales_monthly": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByMonthItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Monthly",
                        "description": "Sales statistics by calendar month for this property type for the last 12 months."
                    },
                    "sales_price_bracket": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SalesDetailsByPriceItem"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sales Price Bracket",
                        "description": "Sales statistics for this property type by price bracket in the last 12 months."
                    }
                },
                "type": "object",
                "required": [
                    "property_type"
                ],
                "title": "PropertyTypeMarketStats"
            },
            "PropertyTypeObject": {
                "properties": {
                    "value": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyType"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Type of the property."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata associated with the property type."
                    }
                },
                "type": "object",
                "required": [
                    "value",
                    "meta"
                ],
                "title": "PropertyTypeObject"
            },
            "PropertyWrapper": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Street group property ID"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "property"
                        ],
                        "title": "Type",
                        "description": "Type of the entity"
                    },
                    "attributes": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Property"
                            }
                        ],
                        "description": "Attributes related to property."
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "attributes"
                ],
                "title": "PropertyWrapper"
            },
            "Public": {
                "properties": {
                    "bus_coach": {
                        "items": {
                            "$ref": "#/components/schemas/TransportItem"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Bus Coach",
                        "description": "List of nearest bus and coach stations."
                    },
                    "rail": {
                        "items": {
                            "$ref": "#/components/schemas/TransportItem"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Rail",
                        "description": "List of nearest rail stations."
                    },
                    "taxi": {
                        "items": {
                            "$ref": "#/components/schemas/TransportItem"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Taxi",
                        "description": "List of nearest taxi ranks."
                    },
                    "air": {
                        "items": {
                            "$ref": "#/components/schemas/TransportItem"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Air",
                        "description": "List of nearest airports."
                    },
                    "tram_metro": {
                        "items": {
                            "$ref": "#/components/schemas/TransportItem"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Tram Metro",
                        "description": "List of nearest tram/metro stops."
                    },
                    "ferry": {
                        "items": {
                            "$ref": "#/components/schemas/TransportItem"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Ferry",
                        "description": "List of nearest ferry ports."
                    }
                },
                "type": "object",
                "required": [
                    "bus_coach",
                    "rail",
                    "taxi",
                    "air",
                    "tram_metro",
                    "ferry"
                ],
                "title": "Public"
            },
            "RecentlySoldTransaction": {
                "properties": {
                    "street_group_property_id": {
                        "type": "string",
                        "title": "Street Group Property Id",
                        "description": "The Street Group Property ID (barcode)."
                    },
                    "address": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Addresses"
                            }
                        ],
                        "description": "The address information of the property."
                    },
                    "property_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PropertyType"
                            }
                        ],
                        "description": "The type of the property."
                    },
                    "transaction_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Transaction Date",
                        "description": "The date when the property was sold."
                    },
                    "price": {
                        "type": "integer",
                        "title": "Price",
                        "description": "The price at which the property was sold."
                    },
                    "internal_area_square_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Internal Area Square Metres",
                        "description": "The internal area of the property in square metres"
                    },
                    "price_per_square_metre": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Price Per Square Metre",
                        "description": "The price per square metre of the property"
                    },
                    "number_of_bedrooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Of Bedrooms",
                        "description": "The number of bedrooms in the property."
                    },
                    "number_of_bathrooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Of Bathrooms",
                        "description": "The number of bathrooms in the property."
                    },
                    "location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GeoPointLocation"
                            }
                        ],
                        "description": "The geographic location of the property at the time of sale."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "street_group_property_id",
                    "address",
                    "property_type",
                    "transaction_date",
                    "price",
                    "internal_area_square_metres",
                    "price_per_square_metre",
                    "number_of_bedrooms",
                    "location"
                ],
                "title": "RecentlySoldTransaction"
            },
            "RentalListing": {
                "properties": {
                    "street_group_property_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Street Group Property Id",
                        "description": "The Street Group Property ID (barcode)."
                    },
                    "address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ListingAddress"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The address of the property listing."
                    },
                    "property_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeObject"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The type of the property listing."
                    },
                    "agent": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AgentAttributes"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Information about the agent associated with the property."
                    },
                    "listing_id": {
                        "type": "string",
                        "title": "Listing Id",
                        "description": "The unique identifier of the property listing listing."
                    },
                    "listing_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ListingType"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The type of the listing."
                    },
                    "listed_date": {
                        "type": "string",
                        "title": "Listed Date",
                        "description": "The date when the property was listed."
                    },
                    "is_available": {
                        "type": "boolean",
                        "title": "Is Available",
                        "description": "Flag indicating if the property is available."
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "The current status of the property listing listing."
                    },
                    "price": {
                        "type": "integer",
                        "title": "Price",
                        "description": "The price of the property listing."
                    },
                    "number_of_bedrooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Of Bedrooms",
                        "description": "The number of bedrooms in the property."
                    },
                    "number_of_bathrooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Of Bathrooms",
                        "description": "The number of bathrooms in the property."
                    },
                    "main_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Main Image Url",
                        "description": "The URL of the main image associated with the property."
                    },
                    "images": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Images",
                        "description": "List of URLs for additional images of the property listing."
                    },
                    "internal_area_square_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Internal Area Square Metres",
                        "description": "The internal area of the property listing in square meters."
                    },
                    "price_per_square_metre": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Price Per Square Metre",
                        "description": "The price per square meter of the property listing."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "A description of the property listing."
                    },
                    "source": {
                        "type": "string",
                        "title": "Source",
                        "description": "The source of the property listing information."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "street_group_property_id",
                    "address",
                    "agent",
                    "listing_id",
                    "listing_type",
                    "listed_date",
                    "is_available",
                    "status",
                    "price",
                    "number_of_bedrooms",
                    "number_of_bathrooms",
                    "main_image_url",
                    "images",
                    "description",
                    "source"
                ],
                "title": "RentalListing"
            },
            "RestrictiveCovenants": {
                "properties": {
                    "unique_identifier": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Unique Identifier",
                        "description": "Unique identifier for the restrictive covenant. Should be consistent across all land registry data."
                    },
                    "associated_property_description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Associated Property Description",
                        "description": "Description of the property associated with the restrictive covenant. This will likely be the address of the property, however could be something like 'land to the rear of 123 Fake street'."
                    }
                },
                "type": "object",
                "required": [
                    "unique_identifier",
                    "associated_property_description"
                ],
                "title": "RestrictiveCovenants"
            },
            "Risk": {
                "type": "string",
                "enum": [
                    "very low",
                    "low",
                    "medium",
                    "high",
                    "unknown"
                ],
                "title": "Risk"
            },
            "RiskSuitability": {
                "type": "string",
                "enum": [
                    "street to parcels of land",
                    "town to street",
                    "county to town",
                    "national to county"
                ],
                "title": "RiskSuitability"
            },
            "RiversAndSeas": {
                "properties": {
                    "risk": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Risk"
                            }
                        ],
                        "description": "\nThe risk of flooding from rivers and seas rating assigned to the property by the relevant\nenvironment agency.\n"
                    },
                    "risk_interpretation": {
                        "type": "string",
                        "title": "Risk Interpretation",
                        "description": "\nThe interpretation of the assigned flood risk as in 1 in N years and percent likelihood as provided by\nthe relevant environment agency.\n"
                    },
                    "risk_suitability": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RiskSuitability"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "\nThe suitability assigned to the flood risk rating.\n\nThis indicates the geographic level at which the environment agency producing the risk rating place\nconfidence in the data relative to the property.\n"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata."
                    }
                },
                "type": "object",
                "required": [
                    "risk",
                    "risk_interpretation"
                ],
                "title": "RiversAndSeas"
            },
            "RoadNetwork": {
                "properties": {
                    "closest_motorway_junction": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ClosestMotorwayJunction"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The closest motorway junction."
                    }
                },
                "type": "object",
                "required": [
                    "closest_motorway_junction"
                ],
                "title": "RoadNetwork"
            },
            "RoyalMailFormat": {
                "properties": {
                    "organisation_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Organisation Name",
                        "description": "Name of the organisation registered at this address."
                    },
                    "department_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Department Name",
                        "description": "Used to supplment Organisation Name to identify a department within the organisation."
                    },
                    "building_number": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Building Number",
                        "description": "Number to identify premise on a thoroughfare or dependant thoroughfare."
                    },
                    "building_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Building Name",
                        "description": "Name of residential or commercial premise."
                    },
                    "sub_building_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sub Building Name",
                        "description": "When a premise is split into individual units such as flats, apartments or business units."
                    },
                    "thoroughfare": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Thoroughfare",
                        "description": "\nAlso known as the street or road name. In general each Thoroughfare Name will have a separate Postcode.\n\nLonger Thoroughfares with high number ranges often have multiple Postcodes covering the entire length of\nthe road, with breaks at suitable points e.g. junctions or natural breaks in the road.\n"
                    },
                    "dependent_thoroughfare": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dependent Thoroughfare",
                        "description": "\nUsed to supplement thoroughfare.\n\nWhen a thoroughfare name is used twice in the same Post Town, the dependant thoroughfare is added to uniquely\nidentify a delivery point.\n"
                    },
                    "dependent_locality": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dependent Locality",
                        "description": "\nWhen the same thoroughfare name reoccurs in a Post town, it may not be possible to make it dependant on a\ndependant thoroughfare.\n\nIn this case the thoroughfare is dependant on a locality.\n"
                    },
                    "double_dependent_locality": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Double Dependent Locality",
                        "description": "\nUsed to supplement Dependant Locality. A Double Dependant Locality supplied along with a Dependant Locality\nif the Dependant Locality exists twice in the same locality.\n"
                    },
                    "post_town": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Post Town",
                        "description": "\nA Post Town is mandatory for delivery of mail to a Delivery Point.\n\nThis is not necessarily the nearest town geographically, but a routing instruction to the Royal Mail\ndelivery office sorting mail for that Delivery Point.\n\nA Post Town will always be present in every address, and for some Localities the Post Town will be the only\nlocality element present.\n"
                    },
                    "postcode": {
                        "type": "string",
                        "title": "Postcode",
                        "description": "Correctly formatted postcode. Capitalised and spaced."
                    }
                },
                "type": "object",
                "required": [
                    "organisation_name",
                    "department_name",
                    "building_number",
                    "building_name",
                    "sub_building_name",
                    "thoroughfare",
                    "dependent_thoroughfare",
                    "dependent_locality",
                    "double_dependent_locality",
                    "post_town",
                    "postcode"
                ],
                "title": "RoyalMailFormat"
            },
            "RoyalMailIdentifiers": {
                "properties": {
                    "udprn": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Udprn",
                        "description": "Unique delivery point reference number."
                    },
                    "umprn": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Umprn",
                        "description": "Unique (multiple) delivery point reference number."
                    }
                },
                "type": "object",
                "title": "RoyalMailIdentifiers"
            },
            "SaleListing": {
                "properties": {
                    "street_group_property_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Street Group Property Id",
                        "description": "The Street Group Property ID (barcode)."
                    },
                    "address": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ListingAddress"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The street address of the property listing."
                    },
                    "property_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PropertyTypeObject"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The type of the property listing."
                    },
                    "agent": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AgentAttributes"
                            }
                        ],
                        "description": "Information about the agent associated with the property."
                    },
                    "listing_id": {
                        "type": "string",
                        "title": "Listing Id",
                        "description": "The unique identifier of the property listing."
                    },
                    "listing_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ListingType"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The type of the listing."
                    },
                    "listed_date": {
                        "type": "string",
                        "title": "Listed Date",
                        "description": "The date when the property was listed."
                    },
                    "is_available": {
                        "type": "boolean",
                        "title": "Is Available",
                        "description": "Flag indicating if the property is available (on market)."
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "The current status of the property listing."
                    },
                    "price": {
                        "type": "integer",
                        "title": "Price",
                        "description": "The price of the property listing."
                    },
                    "number_of_bedrooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Of Bedrooms",
                        "description": "The number of bedrooms in the property."
                    },
                    "number_of_bathrooms": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Number Of Bathrooms",
                        "description": "The number of bathrooms in the property."
                    },
                    "main_image_url": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Main Image Url",
                        "description": "The URL of the main image associated with the property."
                    },
                    "images": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "minItems": 0,
                        "title": "Images",
                        "description": "List of URLs for additional images of the property listing."
                    },
                    "internal_area_square_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Internal Area Square Metres",
                        "description": "The internal area of the property listing in square meters."
                    },
                    "price_per_square_metre": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Price Per Square Metre",
                        "description": "The price per square meter of the property listing."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "A description of the property listing."
                    },
                    "source": {
                        "type": "string",
                        "title": "Source",
                        "description": "The source of the property listing information."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "street_group_property_id",
                    "address",
                    "agent",
                    "listing_id",
                    "listing_type",
                    "listed_date",
                    "is_available",
                    "status",
                    "price",
                    "number_of_bedrooms",
                    "number_of_bathrooms",
                    "main_image_url",
                    "images",
                    "description",
                    "source"
                ],
                "title": "SaleListing"
            },
            "SalesDetailsByMonthItem": {
                "properties": {
                    "year": {
                        "type": "integer",
                        "title": "Year",
                        "description": "The year of the sale."
                    },
                    "month": {
                        "type": "integer",
                        "title": "Month",
                        "description": "The month of the sale."
                    },
                    "count_of_sales": {
                        "type": "integer",
                        "title": "Count Of Sales",
                        "description": "The count of property sales in the given month."
                    },
                    "average_price": {
                        "type": "integer",
                        "title": "Average Price",
                        "description": "The average price of the properties sold."
                    }
                },
                "type": "object",
                "required": [
                    "year",
                    "month",
                    "count_of_sales",
                    "average_price"
                ],
                "title": "SalesDetailsByMonthItem"
            },
            "SalesDetailsByPriceItem": {
                "properties": {
                    "price_bracket_index": {
                        "type": "integer",
                        "title": "Price Bracket Index",
                        "description": "Index of the price bracket, brackets are every £50k up to £1 million, with £1m+ being index 20."
                    },
                    "price_bracket_name": {
                        "type": "string",
                        "title": "Price Bracket Name",
                        "description": "The name of the price bracket representing £50k price bracket."
                    },
                    "count_of_sales": {
                        "type": "integer",
                        "title": "Count Of Sales",
                        "description": "Total count of sales."
                    }
                },
                "type": "object",
                "required": [
                    "price_bracket_index",
                    "price_bracket_name",
                    "count_of_sales"
                ],
                "title": "SalesDetailsByPriceItem"
            },
            "SalesDetailsByYearItem": {
                "properties": {
                    "year": {
                        "type": "integer",
                        "title": "Year",
                        "description": "The year of the sale."
                    },
                    "count_of_sales": {
                        "type": "integer",
                        "title": "Count Of Sales",
                        "description": "The count of property sales in the given year."
                    },
                    "average_price": {
                        "type": "integer",
                        "title": "Average Price",
                        "description": "The average price of the properties sold."
                    }
                },
                "type": "object",
                "required": [
                    "year",
                    "count_of_sales",
                    "average_price"
                ],
                "title": "SalesDetailsByYearItem"
            },
            "SchoolItem": {
                "properties": {
                    "school_name": {
                        "type": "string",
                        "title": "School Name",
                        "description": "The name of the school."
                    },
                    "location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GeoPointLocation"
                            }
                        ],
                        "description": "The location of the school."
                    },
                    "school_rating": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "School Rating",
                        "description": "The latest OFSTED rating."
                    },
                    "postcode": {
                        "type": "string",
                        "title": "Postcode",
                        "description": "The postcode for the school."
                    },
                    "school_type": {
                        "items": {
                            "$ref": "#/components/schemas/SchoolTypes"
                        },
                        "type": "array",
                        "title": "School Type",
                        "description": "All school types covered by this school."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "school_name",
                    "location",
                    "postcode",
                    "school_type"
                ],
                "title": "SchoolItem"
            },
            "SchoolTypes": {
                "type": "string",
                "enum": [
                    "Nursery",
                    "Primary",
                    "Secondary",
                    "Post-16",
                    "All-through",
                    "PRU",
                    "Special",
                    "Independent",
                    "University"
                ],
                "title": "SchoolTypes"
            },
            "SimplifiedFormat": {
                "properties": {
                    "house_number": {
                        "type": "string",
                        "title": "House Number",
                        "description": "Number to identify premise on a thoroughfare or dependant thoroughfare."
                    },
                    "street": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Street",
                        "description": "\nThe street or road name. In general each street will have a separate Postcode.\n"
                    },
                    "locality": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Locality",
                        "description": "\nWhen the same street name occurs in a town, the locality is used to further differentiate the property.\n"
                    },
                    "town": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Town",
                        "description": "The post town."
                    },
                    "postcode": {
                        "type": "string",
                        "title": "Postcode",
                        "description": "Correctly formatted postcode. Capitalised and spaced."
                    }
                },
                "type": "object",
                "required": [
                    "house_number",
                    "street",
                    "locality",
                    "town",
                    "postcode"
                ],
                "title": "SimplifiedFormat"
            },
            "StreetDataErrorAttributes": {
                "properties": {
                    "status": {
                        "type": "integer",
                        "title": "Status",
                        "description": "The HTTP status code number."
                    },
                    "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The HTTP status code description string."
                    },
                    "detail": {
                        "type": "string",
                        "title": "Detail",
                        "description": "The error message."
                    },
                    "request_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Request Id",
                        "description": "\nA unique ID for the request.\n\nThis should be provided when reporting errors for quicker support.\n"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "The version of the API."
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "title",
                    "detail",
                    "request_id",
                    "version"
                ],
                "title": "StreetDataErrorAttributes"
            },
            "StreetGroupFormat": {
                "properties": {
                    "address_lines": {
                        "type": "string",
                        "title": "Address Lines",
                        "description": "The simplified address string combining the Royal Mail Paf fields."
                    },
                    "postcode": {
                        "type": "string",
                        "title": "Postcode",
                        "description": "The postcode."
                    }
                },
                "type": "object",
                "required": [
                    "address_lines",
                    "postcode"
                ],
                "title": "StreetGroupFormat"
            },
            "SurfaceWater": {
                "properties": {
                    "risk": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Risk"
                            }
                        ],
                        "description": "\nThe risk of flooding from surface water rating assigned to the property by the relevant\nenvironment agency.\n"
                    },
                    "risk_interpretation": {
                        "type": "string",
                        "title": "Risk Interpretation",
                        "description": "\nThe interpretation of the assigned flood risk as in 1 in N years and percent likelihood as provided by\nthe relevant environment agency.\n"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata."
                    }
                },
                "type": "object",
                "required": [
                    "risk",
                    "risk_interpretation"
                ],
                "title": "SurfaceWater"
            },
            "Tenure": {
                "properties": {
                    "tenure_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/TenureValues"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "The tenure type for the property."
                    },
                    "tenure_type_predicted": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tenure Type Predicted",
                        "description": "True if the tenure type value is predicted"
                    },
                    "lease_details": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Lease"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Where property tenure_type is leasehold, this object will hold details of the lease, where known"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Additional metadata related to the tenure."
                    }
                },
                "type": "object",
                "required": [
                    "tenure_type",
                    "lease_details"
                ],
                "title": "Tenure"
            },
            "TenureValues": {
                "type": "string",
                "enum": [
                    "freehold",
                    "leasehold"
                ],
                "title": "TenureValues"
            },
            "Tiers": {
                "type": "string",
                "enum": [
                    "basic",
                    "core",
                    "premium"
                ],
                "title": "Tiers"
            },
            "Title": {
                "properties": {
                    "title_number": {
                        "type": "string",
                        "title": "Title Number",
                        "description": "The title number associated with the property."
                    },
                    "class_of_title": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Of Title",
                        "description": "See https://use-land-property-data.service.gov.uk/datasets/nps/tech-spec/3 for definition of each class of title."
                    },
                    "estate_interest": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Estate Interest",
                        "description": "See https://use-land-property-data.service.gov.uk/datasets/nps/tech-spec/3 for definition of each estate interest."
                    },
                    "polygons": {
                        "items": {
                            "$ref": "#/components/schemas/TitlePolygon"
                        },
                        "type": "array",
                        "title": "Polygons",
                        "description": "List of polygons associated with the title."
                    }
                },
                "type": "object",
                "required": [
                    "title_number",
                    "class_of_title",
                    "estate_interest",
                    "polygons"
                ],
                "title": "Title"
            },
            "TitleDeeds": {
                "properties": {
                    "titles": {
                        "items": {
                            "$ref": "#/components/schemas/Title"
                        },
                        "type": "array",
                        "title": "Titles",
                        "description": "List of title objects."
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Meta"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Metadata related to title deeds."
                    }
                },
                "type": "object",
                "required": [
                    "titles",
                    "meta"
                ],
                "title": "TitleDeeds"
            },
            "TitlePolygon": {
                "properties": {
                    "polygon_id": {
                        "type": "string",
                        "title": "Polygon Id",
                        "description": "The ID of the polygon."
                    },
                    "date_polygon_created": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Polygon Created",
                        "description": "The date when the polygon was created."
                    },
                    "date_polygon_updated": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Date Polygon Updated",
                        "description": "The date when the polygon was last updated."
                    },
                    "epsg_4326_polygon": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PolygonModel"
                            },
                            {
                                "$ref": "#/components/schemas/MultiPolygonModel"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Epsg 4326 Polygon",
                        "description": "Polygon in the EPSG:4326 coordinate reference system."
                    },
                    "epsg_27700_polygon": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/OSGBPolygonModel"
                            },
                            {
                                "$ref": "#/components/schemas/OSGBMultiPolygonModel"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Epsg 27700 Polygon",
                        "description": "Polygon in the EPSG:27700 (OSGB) coordinate reference system."
                    },
                    "polygon_contains_property": {
                        "type": "boolean",
                        "title": "Polygon Contains Property",
                        "description": "True if the point location of the property is within the polygon."
                    },
                    "boundary_area_square_metres": {
                        "type": "integer",
                        "title": "Boundary Area Square Metres",
                        "description": "The internal area of the polygon in square metres."
                    },
                    "distance_from_property": {
                        "type": "integer",
                        "title": "Distance From Property",
                        "description": "Distance in metres from the point location of the property to the nearest edge of the polygon."
                    }
                },
                "type": "object",
                "required": [
                    "polygon_id",
                    "date_polygon_created",
                    "date_polygon_updated",
                    "epsg_4326_polygon",
                    "epsg_27700_polygon",
                    "polygon_contains_property",
                    "boundary_area_square_metres",
                    "distance_from_property"
                ],
                "title": "TitlePolygon"
            },
            "Transport": {
                "properties": {
                    "public": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Public"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Transport stops separated by type."
                    },
                    "road_network": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/RoadNetwork"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Road network information."
                    }
                },
                "type": "object",
                "title": "Transport"
            },
            "TransportItem": {
                "properties": {
                    "atco_code": {
                        "type": "string",
                        "title": "Atco Code",
                        "description": "The ATCO code associated with the transport item."
                    },
                    "stop_name": {
                        "type": "string",
                        "title": "Stop Name",
                        "description": "The name of the transport stop."
                    },
                    "location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GeoPointLocation"
                            }
                        ],
                        "description": "The geographical location of the transport item."
                    },
                    "distance_in_metres": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Distance In Metres",
                        "description": "The straight line distance in metres from the property."
                    }
                },
                "type": "object",
                "required": [
                    "atco_code",
                    "stop_name",
                    "location"
                ],
                "title": "TransportItem"
            },
            "ValidationErrorAttributes": {
                "properties": {
                    "loc": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Loc",
                        "description": "List of strings representing the location of the validation error."
                    },
                    "msg": {
                        "type": "string",
                        "title": "Msg",
                        "description": "Error message describing the validation issue."
                    },
                    "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "Type of validation error."
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationErrorAttributes"
            },
            "Version": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "A human readable string with the current version."
                    },
                    "sem_ver": {
                        "type": "string",
                        "title": "Sem Ver",
                        "description": "A semantic version string following the convention: <https://semver.org/>."
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "sem_ver"
                ],
                "title": "Version"
            },
            "fastapi_street_data__models__responses__common__Coordinates": {
                "properties": {
                    "longitude": {
                        "type": "number",
                        "title": "Longitude",
                        "description": "The longitude coordinate value."
                    },
                    "latitude": {
                        "type": "number",
                        "title": "Latitude",
                        "description": "The latitude coordinate value."
                    }
                },
                "type": "object",
                "required": [
                    "longitude",
                    "latitude"
                ],
                "title": "Coordinates"
            },
            "pydantic_geojson___base__Coordinates": {
                "prefixItems": [
                    {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Lon"
                    },
                    {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Lat"
                    }
                ],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
            }
        },
        "securitySchemes": {
            "APIKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "x-api-key"
            }
        }
    }
}
